/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.19.25
 */

#include "sipAPIlibqt_gui_cpp_sip.h"

#line 7 "generic_proxy.sip"
#include <qt_gui_cpp/generic_proxy.h>
#line 12 "/home/f1tenthteam2/pleasework/build_isolated/qt_gui_cpp/sip/qt_gui_cpp_sip/siplibqt_gui_cpp_sipqt_gui_cppGenericProxy.cpp"

#line 28 "/usr/lib/python3/dist-packages/PyQt5/bindings/QtCore/qobject.sip"
#include <qobject.h>
#line 16 "/home/f1tenthteam2/pleasework/build_isolated/qt_gui_cpp/sip/qt_gui_cpp_sip/siplibqt_gui_cpp_sipqt_gui_cppGenericProxy.cpp"


/* Call the instance's destructor. */
extern "C" {static void release_qt_gui_cpp_GenericProxy(void *, int);}
static void release_qt_gui_cpp_GenericProxy(void *sipCppV, int)
{
    delete reinterpret_cast< ::qt_gui_cpp::GenericProxy *>(sipCppV);
}


extern "C" {static void *array_qt_gui_cpp_GenericProxy(Py_ssize_t);}
static void *array_qt_gui_cpp_GenericProxy(Py_ssize_t sipNrElem)
{
    return new  ::qt_gui_cpp::GenericProxy[sipNrElem];
}


extern "C" {static void assign_qt_gui_cpp_GenericProxy(void *, SIP_SSIZE_T, void *);}
static void assign_qt_gui_cpp_GenericProxy(void *sipDst, SIP_SSIZE_T sipDstIdx, void *sipSrc)
{
    reinterpret_cast< ::qt_gui_cpp::GenericProxy *>(sipDst)[sipDstIdx] = *reinterpret_cast< ::qt_gui_cpp::GenericProxy *>(sipSrc);
}


extern "C" {static void *copy_qt_gui_cpp_GenericProxy(const void *, SIP_SSIZE_T);}
static void *copy_qt_gui_cpp_GenericProxy(const void *sipSrc, SIP_SSIZE_T sipSrcIdx)
{
    return new  ::qt_gui_cpp::GenericProxy(reinterpret_cast<const  ::qt_gui_cpp::GenericProxy *>(sipSrc)[sipSrcIdx]);
}


extern "C" {static void dealloc_qt_gui_cpp_GenericProxy(sipSimpleWrapper *);}
static void dealloc_qt_gui_cpp_GenericProxy(sipSimpleWrapper *sipSelf)
{
    if (sipIsOwnedByPython(sipSelf))
    {
        release_qt_gui_cpp_GenericProxy(sipGetAddress(sipSelf), 0);
    }
}


extern "C" {static void *init_type_qt_gui_cpp_GenericProxy(sipSimpleWrapper *, PyObject *, PyObject *, PyObject **, PyObject **, PyObject **);}
static void *init_type_qt_gui_cpp_GenericProxy(sipSimpleWrapper *, PyObject *sipArgs, PyObject *sipKwds, PyObject **sipUnused, PyObject **, PyObject **sipParseErr)
{
     ::qt_gui_cpp::GenericProxy *sipCpp = SIP_NULLPTR;

    {
         ::QObject* a0 = 0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, sipUnused, "|J8", sipType_QObject, &a0))
        {
            sipCpp = new  ::qt_gui_cpp::GenericProxy(a0);

            return sipCpp;
        }
    }

    {
        const  ::qt_gui_cpp::GenericProxy* a0;

        if (sipParseKwdArgs(sipParseErr, sipArgs, sipKwds, SIP_NULLPTR, sipUnused, "J9", sipType_qt_gui_cpp_GenericProxy, &a0))
        {
            sipCpp = new  ::qt_gui_cpp::GenericProxy(*a0);

            return sipCpp;
        }
    }

    return SIP_NULLPTR;
}


static pyqt5ClassPluginDef plugin_qt_gui_cpp_GenericProxy = {
    SIP_NULLPTR,
    0,
    SIP_NULLPTR,
    SIP_NULLPTR
};


sipClassTypeDef sipTypeDef_libqt_gui_cpp_sip_qt_gui_cpp_GenericProxy = {
    {
        -1,
        SIP_NULLPTR,
        SIP_NULLPTR,
        SIP_TYPE_SUPER_INIT|SIP_TYPE_CLASS,
        sipNameNr_qt_gui_cpp__GenericProxy,
        {SIP_NULLPTR},
        &plugin_qt_gui_cpp_GenericProxy
    },
    {
        sipNameNr_GenericProxy,
        {3, 255, 0},
        0, SIP_NULLPTR,
        0, SIP_NULLPTR,
        0, SIP_NULLPTR,
        {SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR, SIP_NULLPTR},
    },
    SIP_NULLPTR,
    -1,
    sipNameNr_sip_simplewrapper,
    SIP_NULLPTR,
    SIP_NULLPTR,
    init_type_qt_gui_cpp_GenericProxy,
    SIP_NULLPTR,
    SIP_NULLPTR,
#if PY_MAJOR_VERSION >= 3
    SIP_NULLPTR,
    SIP_NULLPTR,
#else
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
#endif
    dealloc_qt_gui_cpp_GenericProxy,
    assign_qt_gui_cpp_GenericProxy,
    array_qt_gui_cpp_GenericProxy,
    copy_qt_gui_cpp_GenericProxy,
    release_qt_gui_cpp_GenericProxy,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR,
    SIP_NULLPTR
};
