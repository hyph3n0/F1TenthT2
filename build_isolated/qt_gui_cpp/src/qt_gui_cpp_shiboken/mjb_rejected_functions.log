************************************************************************
Not in type system
************************************************************************

************************************************************************
Generation disabled by type system
 - GLboolean QOpenGLExtraFunctions::glIsSync(GLsync) matches class "^QOpenGL.*$" and "GLsync" matches "^GLsync$"
 - GLenum QOpenGLExtraFunctions::glClientWaitSync(GLsync,GLbitfield,GLuint64) matches class "^QOpenGL.*$" and "GLsync" matches "^GLsync$"
 - GLuint QOpenGLExtraFunctions::glCreateShaderProgramv(GLenum,GLsizei,const GLchar*const*) matches class "^QOpenGL.*$" and "const GLchar*const*" matches "^(const )?GLchar ?\*(const)?\*$"
 - GLuint QOpenGLExtraFunctions::glGetDebugMessageLog(GLuint,GLsizei,GLenum*,GLenum*,GLuint*,GLenum*,GLsizei*,GLchar*) matches class "^QOpenGL.*$" and "GLchar*" matches "^GLchar\*$"
 - QAbstractAnimationPrivate* QAbstractAnimation::d_func() matches class "^.*$" and "^d_func$"
 - QAbstractButtonPrivate* QAbstractButton::d_func() matches class "^.*$" and "^d_func$"
 - QAbstractEventDispatcherPrivate* QAbstractEventDispatcher::d_func() matches class "^.*$" and "^d_func$"
 - QAbstractGraphicsShapeItemPrivate* QAbstractGraphicsShapeItem::d_func() matches class "^.*$" and "^d_func$"
 - QAbstractItemDelegatePrivate* QAbstractItemDelegate::d_func() matches class "^.*$" and "^d_func$"
 - QAbstractItemModelPrivate* QAbstractItemModel::d_func() matches class "^.*$" and "^d_func$"
 - QAbstractItemViewPrivate* QAbstractItemView::d_func() matches class "^.*$" and "^d_func$"
 - QAbstractOpenGLFunctionsPrivate* QAbstractOpenGLFunctions::d_func() matches class "^.*$" and "^d_func$"
 - QAbstractProxyModelPrivate* QAbstractProxyModel::d_func() matches class "^.*$" and "^d_func$"
 - QAbstractScrollAreaPrivate* QAbstractScrollArea::d_func() matches class "^.*$" and "^d_func$"
 - QAbstractSliderPrivate* QAbstractSlider::d_func() matches class "^.*$" and "^d_func$"
 - QAbstractSpinBoxPrivate* QAbstractSpinBox::d_func() matches class "^.*$" and "^d_func$"
 - QAbstractStatePrivate* QAbstractState::d_func() matches class "^.*$" and "^d_func$"
 - QAbstractTextDocumentLayoutPrivate* QAbstractTextDocumentLayout::d_func() matches class "^.*$" and "^d_func$"
 - QAbstractTransitionPrivate* QAbstractTransition::d_func() matches class "^.*$" and "^d_func$"
 - QActionGroupPrivate* QActionGroup::d_func() matches class "^.*$" and "^d_func$"
 - QActionPrivate* QAction::d_func() matches class "^.*$" and "^d_func$"
 - QAnimationGroupPrivate* QAnimationGroup::d_func() matches class "^.*$" and "^d_func$"
 - QApplicationPrivate* QApplication::d_func() matches class "^.*$" and "^d_func$"
 - QBitArray::DataPtr& QBitArray::data_ptr() matches class "^.*$" and "^data_ptr$"
 - QBoxLayoutPrivate* QBoxLayout::d_func() matches class "^.*$" and "^d_func$"
 - QBrush::DataPtr& QBrush::data_ptr() matches class "^.*$" and "^data_ptr$"
 - QBufferPrivate* QBuffer::d_func() matches class "^.*$" and "^d_func$"
 - QButtonGroupPrivate* QButtonGroup::d_func() matches class "^.*$" and "^d_func$"
 - QByteArray::DataPtr& QByteArray::data_ptr() matches class "^.*$" and "^data_ptr$"
 - QCalendarWidgetPrivate* QCalendarWidget::d_func() matches class "^.*$" and "^d_func$"
 - QCborValue QCborMap::take(QLatin1String) matches class "^.*$" and "QLatin1String" matches "^QLatin1String$"
 - QCborValue QCborMap::value(QLatin1String) matches class "^.*$" and "QLatin1String" matches "^QLatin1String$"
 - QCheckBoxPrivate* QCheckBox::d_func() matches class "^.*$" and "^d_func$"
 - QColorDialogPrivate* QColorDialog::d_func() matches class "^.*$" and "^d_func$"
 - QColorSpacePrivate* QColorSpace::d_func() matches class "^.*$" and "^d_func$"
 - QColumnViewPrivate* QColumnView::d_func() matches class "^.*$" and "^d_func$"
 - QComboBoxPrivate* QComboBox::d_func() matches class "^.*$" and "^d_func$"
 - QCommandLinkButtonPrivate* QCommandLinkButton::d_func() matches class "^.*$" and "^d_func$"
 - QCommonStylePrivate* QCommonStyle::d_func() matches class "^.*$" and "^d_func$"
 - QCompleterPrivate* QCompleter::d_func() matches class "^.*$" and "^d_func$"
 - QConcatenateTablesProxyModelPrivate* QConcatenateTablesProxyModel::d_func() matches class "^.*$" and "^d_func$"
 - QCoreApplicationPrivate* QCoreApplication::d_func() matches class "^.*$" and "^d_func$"
 - QDataStream& QDataStream::operator<<(qfloat16) matches class "^.*$" and "qfloat16" matches "^qfloat16&?$"
 - QDataStream& QDataStream::operator<<(std::nullptr_t) matches class "^.*$" and "std::nullptr_t" matches "^std::nullptr_t&?$"
 - QDataStream& QDataStream::operator>>(qfloat16&) matches class "^.*$" and "qfloat16&" matches "^qfloat16&?$"
 - QDataStream& QDataStream::operator>>(std::nullptr_t&) matches class "^.*$" and "std::nullptr_t&" matches "^std::nullptr_t&?$"
 - QDataWidgetMapperPrivate* QDataWidgetMapper::d_func() matches class "^.*$" and "^d_func$"
 - QDateTimeEditPrivate* QDateTimeEdit::d_func() matches class "^.*$" and "^d_func$"
 - QDesktopWidgetPrivate* QDesktopWidget::d_func() matches class "^.*$" and "^d_func$"
 - QDialPrivate* QDial::d_func() matches class "^.*$" and "^d_func$"
 - QDialogButtonBoxPrivate* QDialogButtonBox::d_func() matches class "^.*$" and "^d_func$"
 - QDialogPrivate* QDialog::d_func() matches class "^.*$" and "^d_func$"
 - QDirModelPrivate* QDirModel::d_func() matches class "^.*$" and "^d_func$"
 - QDirPrivate* QDir::d_func() matches class "^.*$" and "^d_func$"
 - QDockWidgetPrivate* QDockWidget::d_func() matches class "^.*$" and "^d_func$"
 - QDoubleSpinBoxPrivate* QDoubleSpinBox::d_func() matches class "^.*$" and "^d_func$"
 - QDoubleValidatorPrivate* QDoubleValidator::d_func() matches class "^.*$" and "^d_func$"
 - QDragPrivate* QDrag::d_func() matches class "^.*$" and "^d_func$"
 - QEasingCurve::EasingFunction QEasingCurve::customType() matches class "^QEasingCurve$" and "^customType$"
 - QErrorMessagePrivate* QErrorMessage::d_func() matches class "^.*$" and "^d_func$"
 - QEventLoopPrivate* QEventLoop::d_func() matches class "^.*$" and "^d_func$"
 - QEventTransitionPrivate* QEventTransition::d_func() matches class "^.*$" and "^d_func$"
 - QFileDevicePrivate* QFileDevice::d_func() matches class "^.*$" and "^d_func$"
 - QFileDialogPrivate* QFileDialog::d_func() matches class "^.*$" and "^d_func$"
 - QFileIconProviderPrivate* QFileIconProvider::d_func() matches class "^.*$" and "^d_func$"
 - QFileInfoPrivate* QFileInfo::d_func() matches class "^.*$" and "^d_func$"
 - QFilePrivate* QFile::d_func() matches class "^.*$" and "^d_func$"
 - QFileSelectorPrivate* QFileSelector::d_func() matches class "^.*$" and "^d_func$"
 - QFileSystemModelPrivate* QFileSystemModel::d_func() matches class "^.*$" and "^d_func$"
 - QFileSystemWatcherPrivate* QFileSystemWatcher::d_func() matches class "^.*$" and "^d_func$"
 - QFinalStatePrivate* QFinalState::d_func() matches class "^.*$" and "^d_func$"
 - QFocusFramePrivate* QFocusFrame::d_func() matches class "^.*$" and "^d_func$"
 - QFontComboBoxPrivate* QFontComboBox::d_func() matches class "^.*$" and "^d_func$"
 - QFontDialogPrivate* QFontDialog::d_func() matches class "^.*$" and "^d_func$"
 - QFormLayoutPrivate* QFormLayout::d_func() matches class "^.*$" and "^d_func$"
 - QFramePrivate* QFrame::d_func() matches class "^.*$" and "^d_func$"
 - QFutureWatcherBasePrivate* QFutureWatcherBase::d_func() matches class "^.*$" and "^d_func$"
 - QGesturePrivate* QGesture::d_func() matches class "^.*$" and "^d_func$"
 - QGraphicsAnchorLayoutPrivate* QGraphicsAnchorLayout::d_func() matches class "^.*$" and "^d_func$"
 - QGraphicsAnchorPrivate* QGraphicsAnchor::d_func() matches class "^.*$" and "^d_func$"
 - QGraphicsBlurEffectPrivate* QGraphicsBlurEffect::d_func() matches class "^.*$" and "^d_func$"
 - QGraphicsColorizeEffectPrivate* QGraphicsColorizeEffect::d_func() matches class "^.*$" and "^d_func$"
 - QGraphicsDropShadowEffectPrivate* QGraphicsDropShadowEffect::d_func() matches class "^.*$" and "^d_func$"
 - QGraphicsEffectPrivate* QGraphicsEffect::d_func() matches class "^.*$" and "^d_func$"
 - QGraphicsEllipseItemPrivate* QGraphicsEllipseItem::d_func() matches class "^.*$" and "^d_func$"
 - QGraphicsGridLayoutPrivate* QGraphicsGridLayout::d_func() matches class "^.*$" and "^d_func$"
 - QGraphicsItemGroupPrivate* QGraphicsItemGroup::d_func() matches class "^.*$" and "^d_func$"
 - QGraphicsItemPrivate* QGraphicsItem::d_func() matches class "^.*$" and "^d_func$"
 - QGraphicsLayoutItemPrivate* QGraphicsLayoutItem::d_func() matches class "^.*$" and "^d_func$"
 - QGraphicsLayoutPrivate* QGraphicsLayout::d_func() matches class "^.*$" and "^d_func$"
 - QGraphicsLineItemPrivate* QGraphicsLineItem::d_func() matches class "^.*$" and "^d_func$"
 - QGraphicsLinearLayoutPrivate* QGraphicsLinearLayout::d_func() matches class "^.*$" and "^d_func$"
 - QGraphicsOpacityEffectPrivate* QGraphicsOpacityEffect::d_func() matches class "^.*$" and "^d_func$"
 - QGraphicsPathItemPrivate* QGraphicsPathItem::d_func() matches class "^.*$" and "^d_func$"
 - QGraphicsPixmapItemPrivate* QGraphicsPixmapItem::d_func() matches class "^.*$" and "^d_func$"
 - QGraphicsPolygonItemPrivate* QGraphicsPolygonItem::d_func() matches class "^.*$" and "^d_func$"
 - QGraphicsProxyWidgetPrivate* QGraphicsProxyWidget::d_func() matches class "^.*$" and "^d_func$"
 - QGraphicsRectItemPrivate* QGraphicsRectItem::d_func() matches class "^.*$" and "^d_func$"
 - QGraphicsRotationPrivate* QGraphicsRotation::d_func() matches class "^.*$" and "^d_func$"
 - QGraphicsScalePrivate* QGraphicsScale::d_func() matches class "^.*$" and "^d_func$"
 - QGraphicsSceneContextMenuEventPrivate* QGraphicsSceneContextMenuEvent::d_func() matches class "^.*$" and "^d_func$"
 - QGraphicsSceneDragDropEventPrivate* QGraphicsSceneDragDropEvent::d_func() matches class "^.*$" and "^d_func$"
 - QGraphicsSceneEventPrivate* QGraphicsSceneEvent::d_func() matches class "^.*$" and "^d_func$"
 - QGraphicsSceneHelpEventPrivate* QGraphicsSceneHelpEvent::d_func() matches class "^.*$" and "^d_func$"
 - QGraphicsSceneHoverEventPrivate* QGraphicsSceneHoverEvent::d_func() matches class "^.*$" and "^d_func$"
 - QGraphicsSceneMouseEventPrivate* QGraphicsSceneMouseEvent::d_func() matches class "^.*$" and "^d_func$"
 - QGraphicsSceneMoveEventPrivate* QGraphicsSceneMoveEvent::d_func() matches class "^.*$" and "^d_func$"
 - QGraphicsScenePrivate* QGraphicsScene::d_func() matches class "^.*$" and "^d_func$"
 - QGraphicsSceneResizeEventPrivate* QGraphicsSceneResizeEvent::d_func() matches class "^.*$" and "^d_func$"
 - QGraphicsSceneWheelEventPrivate* QGraphicsSceneWheelEvent::d_func() matches class "^.*$" and "^d_func$"
 - QGraphicsSimpleTextItemPrivate* QGraphicsSimpleTextItem::d_func() matches class "^.*$" and "^d_func$"
 - QGraphicsTransformPrivate* QGraphicsTransform::d_func() matches class "^.*$" and "^d_func$"
 - QGraphicsViewPrivate* QGraphicsView::d_func() matches class "^.*$" and "^d_func$"
 - QGraphicsWidgetPrivate* QGraphicsWidget::d_func() matches class "^.*$" and "^d_func$"
 - QGridLayoutPrivate* QGridLayout::d_func() matches class "^.*$" and "^d_func$"
 - QGroupBoxPrivate* QGroupBox::d_func() matches class "^.*$" and "^d_func$"
 - QGuiApplicationPrivate* QGuiApplication::d_func() matches class "^.*$" and "^d_func$"
 - QHeaderViewPrivate* QHeaderView::d_func() matches class "^.*$" and "^d_func$"
 - QHistoryStatePrivate* QHistoryState::d_func() matches class "^.*$" and "^d_func$"
 - QIODevicePrivate* QIODevice::d_func() matches class "^.*$" and "^d_func$"
 - QIcon::DataPtr& QIcon::data_ptr() matches class "^.*$" and "^data_ptr$"
 - QIdentityProxyModelPrivate* QIdentityProxyModel::d_func() matches class "^.*$" and "^d_func$"
 - QImage::DataPtr& QImage::data_ptr() matches class "^.*$" and "^data_ptr$"
 - QImageIOHandlerPrivate* QImageIOHandler::d_func() matches class "^.*$" and "^d_func$"
 - QInputDialogPrivate* QInputDialog::d_func() matches class "^.*$" and "^d_func$"
 - QInputMethodPrivate* QInputMethod::d_func() matches class "^.*$" and "^d_func$"
 - QItemDelegatePrivate* QItemDelegate::d_func() matches class "^.*$" and "^d_func$"
 - QItemSelectionModelPrivate* QItemSelectionModel::d_func() matches class "^.*$" and "^d_func$"
 - QKeyEventTransitionPrivate* QKeyEventTransition::d_func() matches class "^.*$" and "^d_func$"
 - QKeySequence::DataPtr& QKeySequence::data_ptr() matches class "^.*$" and "^data_ptr$"
 - QKeySequenceEditPrivate* QKeySequenceEdit::d_func() matches class "^.*$" and "^d_func$"
 - QLCDNumberPrivate* QLCDNumber::d_func() matches class "^.*$" and "^d_func$"
 - QLabelPrivate* QLabel::d_func() matches class "^.*$" and "^d_func$"
 - QLayoutPrivate* QLayout::d_func() matches class "^.*$" and "^d_func$"
 - QLineEditPrivate* QLineEdit::d_func() matches class "^.*$" and "^d_func$"
 - QListViewPrivate* QListView::d_func() matches class "^.*$" and "^d_func$"
 - QListWidgetPrivate* QListWidget::d_func() matches class "^.*$" and "^d_func$"
 - QLockFilePrivate* QLockFile::d_func() matches class "^.*$" and "^d_func$"
 - QMainWindowPrivate* QMainWindow::d_func() matches class "^.*$" and "^d_func$"
 - QMdiAreaPrivate* QMdiArea::d_func() matches class "^.*$" and "^d_func$"
 - QMdiSubWindowPrivate* QMdiSubWindow::d_func() matches class "^.*$" and "^d_func$"
 - QMenuBarPrivate* QMenuBar::d_func() matches class "^.*$" and "^d_func$"
 - QMenuPrivate* QMenu::d_func() matches class "^.*$" and "^d_func$"
 - QMessageBoxPrivate* QMessageBox::d_func() matches class "^.*$" and "^d_func$"
 - QMetaObject::Connection QObject::connectImpl(const QObject*,void**,const QObject*,void**,QtPrivate::QSlotObjectBase*,Qt::ConnectionType,const int*,const QMetaObject*) matches class "^.*$" and "QtPrivate::QSlotObjectBase*" matches "^QtPrivate\:\:QSlotObjectBase\*$"
 - QMimeDataPrivate* QMimeData::d_func() matches class "^.*$" and "^d_func$"
 - QMouseEventTransitionPrivate* QMouseEventTransition::d_func() matches class "^.*$" and "^d_func$"
 - QMoviePrivate* QMovie::d_func() matches class "^.*$" and "^d_func$"
 - QObjectPrivate* QObject::d_func() matches class "^.*$" and "^d_func$"
 - QOffscreenSurfacePrivate* QOffscreenSurface::d_func() matches class "^.*$" and "^d_func$"
 - QOpenGLBufferPrivate* QOpenGLBuffer::d_func() matches class "^.*$" and "^d_func$"
 - QOpenGLContextGroupPrivate* QOpenGLContextGroup::d_func() matches class "^.*$" and "^d_func$"
 - QOpenGLContextPrivate* QOpenGLContext::d_func() matches class "^.*$" and "^d_func$"
 - QOpenGLDebugLoggerPrivate* QOpenGLDebugLogger::d_func() matches class "^.*$" and "^d_func$"
 - QOpenGLExtraFunctionsPrivate* QOpenGLExtraFunctions::d_func() matches class "^.*$" and "^d_func$"
 - QOpenGLFramebufferObjectPrivate* QOpenGLFramebufferObject::d_func() matches class "^.*$" and "^d_func$"
 - QOpenGLShaderPrivate* QOpenGLShader::d_func() matches class "^.*$" and "^d_func$"
 - QOpenGLShaderProgramPrivate* QOpenGLShaderProgram::d_func() matches class "^.*$" and "^d_func$"
 - QOpenGLTextureBlitterPrivate* QOpenGLTextureBlitter::d_func() matches class "^.*$" and "^d_func$"
 - QOpenGLTexturePrivate* QOpenGLTexture::d_func() matches class "^.*$" and "^d_func$"
 - QOpenGLTimeMonitorPrivate* QOpenGLTimeMonitor::d_func() matches class "^.*$" and "^d_func$"
 - QOpenGLTimerQueryPrivate* QOpenGLTimerQuery::d_func() matches class "^.*$" and "^d_func$"
 - QOpenGLVertexArrayObjectPrivate* QOpenGLVertexArrayObject::d_func() matches class "^.*$" and "^d_func$"
 - QOpenGLWidgetPrivate* QOpenGLWidget::d_func() matches class "^.*$" and "^d_func$"
 - QOpenGLWindowPrivate* QOpenGLWindow::d_func() matches class "^.*$" and "^d_func$"
 - QPaintDeviceWindowPrivate* QPaintDeviceWindow::d_func() matches class "^.*$" and "^d_func$"
 - QPaintEnginePrivate* QPaintEngine::d_func() matches class "^.*$" and "^d_func$"
 - QPainterPathData* QPainterPath::d_func() matches class "^.*$" and "^d_func$"
 - QPainterPathStrokerPrivate* QPainterPathStroker::d_func() matches class "^.*$" and "^d_func$"
 - QPainterPrivate* QPainter::d_func() matches class "^.*$" and "^d_func$"
 - QPanGesturePrivate* QPanGesture::d_func() matches class "^.*$" and "^d_func$"
 - QParallelAnimationGroupPrivate* QParallelAnimationGroup::d_func() matches class "^.*$" and "^d_func$"
 - QPauseAnimationPrivate* QPauseAnimation::d_func() matches class "^.*$" and "^d_func$"
 - QPdfWriterPrivate* QPdfWriter::d_func() matches class "^.*$" and "^d_func$"
 - QPen::DataPtr& QPen::data_ptr() matches class "^.*$" and "^data_ptr$"
 - QPicture::DataPtr& QPicture::data_ptr() matches class "^.*$" and "^data_ptr$"
 - QPicturePrivate* QPicture::d_func() matches class "^.*$" and "^d_func$"
 - QPinchGesturePrivate* QPinchGesture::d_func() matches class "^.*$" and "^d_func$"
 - QPixmap::DataPtr& QPixmap::data_ptr() matches class "^.*$" and "^data_ptr$"
 - QPlainTextDocumentLayoutPrivate* QPlainTextDocumentLayout::d_func() matches class "^.*$" and "^d_func$"
 - QPlainTextEditPrivate* QPlainTextEdit::d_func() matches class "^.*$" and "^d_func$"
 - QPoint QPolygon::point(int) matches class "^QPolygon$" and "^point$"
 - QProcessPrivate* QProcess::d_func() matches class "^.*$" and "^d_func$"
 - QProgressBarPrivate* QProgressBar::d_func() matches class "^.*$" and "^d_func$"
 - QProgressDialogPrivate* QProgressDialog::d_func() matches class "^.*$" and "^d_func$"
 - QPropertyAnimationPrivate* QPropertyAnimation::d_func() matches class "^.*$" and "^d_func$"
 - QProxyStylePrivate* QProxyStyle::d_func() matches class "^.*$" and "^d_func$"
 - QPushButtonPrivate* QPushButton::d_func() matches class "^.*$" and "^d_func$"
 - QRadioButtonPrivate* QRadioButton::d_func() matches class "^.*$" and "^d_func$"
 - QRasterWindowPrivate* QRasterWindow::d_func() matches class "^.*$" and "^d_func$"
 - QRegularExpressionValidatorPrivate* QRegularExpressionValidator::d_func() matches class "^.*$" and "^d_func$"
 - QResourcePrivate* QResource::d_func() matches class "^.*$" and "^d_func$"
 - QRubberBandPrivate* QRubberBand::d_func() matches class "^.*$" and "^d_func$"
 - QSaveFilePrivate* QSaveFile::d_func() matches class "^.*$" and "^d_func$"
 - QScreenPrivate* QScreen::d_func() matches class "^.*$" and "^d_func$"
 - QScrollAreaPrivate* QScrollArea::d_func() matches class "^.*$" and "^d_func$"
 - QScrollBarPrivate* QScrollBar::d_func() matches class "^.*$" and "^d_func$"
 - QScrollerPrivate* QScroller::d_func() matches class "^.*$" and "^d_func$"
 - QSequentialAnimationGroupPrivate* QSequentialAnimationGroup::d_func() matches class "^.*$" and "^d_func$"
 - QSessionManagerPrivate* QSessionManager::d_func() matches class "^.*$" and "^d_func$"
 - QSettings::Format QSettings::registerFormat(const QString&,QSettings::ReadFunc,QSettings::WriteFunc,Qt::CaseSensitivity) matches class "^QSettings$" and "^registerFormat$"
 - QSettingsPrivate* QSettings::d_func() matches class "^.*$" and "^d_func$"
 - QShortcutPrivate* QShortcut::d_func() matches class "^.*$" and "^d_func$"
 - QSignalMapperPrivate* QSignalMapper::d_func() matches class "^.*$" and "^d_func$"
 - QSignalTransitionPrivate* QSignalTransition::d_func() matches class "^.*$" and "^d_func$"
 - QSizeGripPrivate* QSizeGrip::d_func() matches class "^.*$" and "^d_func$"
 - QSliderPrivate* QSlider::d_func() matches class "^.*$" and "^d_func$"
 - QSocketNotifierPrivate* QSocketNotifier::d_func() matches class "^.*$" and "^d_func$"
 - QSortFilterProxyModelPrivate* QSortFilterProxyModel::d_func() matches class "^.*$" and "^d_func$"
 - QSpinBoxPrivate* QSpinBox::d_func() matches class "^.*$" and "^d_func$"
 - QSplashScreenPrivate* QSplashScreen::d_func() matches class "^.*$" and "^d_func$"
 - QSplitterHandlePrivate* QSplitterHandle::d_func() matches class "^.*$" and "^d_func$"
 - QSplitterPrivate* QSplitter::d_func() matches class "^.*$" and "^d_func$"
 - QStackedLayoutPrivate* QStackedLayout::d_func() matches class "^.*$" and "^d_func$"
 - QStackedWidgetPrivate* QStackedWidget::d_func() matches class "^.*$" and "^d_func$"
 - QStandardItemModelPrivate* QStandardItemModel::d_func() matches class "^.*$" and "^d_func$"
 - QStandardItemPrivate* QStandardItem::d_func() matches class "^.*$" and "^d_func$"
 - QStateMachinePrivate* QStateMachine::d_func() matches class "^.*$" and "^d_func$"
 - QStatePrivate* QState::d_func() matches class "^.*$" and "^d_func$"
 - QStatusBarPrivate* QStatusBar::d_func() matches class "^.*$" and "^d_func$"
 - QString QAbstractAnimation::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QAbstractAnimation::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QAbstractButton::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QAbstractButton::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QAbstractEventDispatcher::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QAbstractEventDispatcher::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QAbstractItemDelegate::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QAbstractItemDelegate::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QAbstractItemModel::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QAbstractItemModel::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QAbstractItemView::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QAbstractItemView::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QAbstractListModel::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QAbstractListModel::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QAbstractProxyModel::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QAbstractProxyModel::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QAbstractScrollArea::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QAbstractScrollArea::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QAbstractSlider::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QAbstractSlider::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QAbstractSpinBox::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QAbstractSpinBox::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QAbstractState::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QAbstractState::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QAbstractTableModel::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QAbstractTableModel::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QAbstractTextDocumentLayout::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QAbstractTextDocumentLayout::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QAbstractTransition::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QAbstractTransition::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QAction::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QAction::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QActionGroup::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QActionGroup::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QAnimationGroup::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QAnimationGroup::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QApplication::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QApplication::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QBoxLayout::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QBoxLayout::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QBuffer::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QBuffer::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QButtonGroup::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QButtonGroup::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QCalendarWidget::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QCalendarWidget::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QCheckBox::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QCheckBox::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QClipboard::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QClipboard::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QColorDialog::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QColorDialog::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QColumnView::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QColumnView::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QComboBox::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QComboBox::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QCommandLineParser::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QCommandLineParser::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QCommandLinkButton::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QCommandLinkButton::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QCommonStyle::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QCommonStyle::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QCompleter::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QCompleter::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QConcatenateTablesProxyModel::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QConcatenateTablesProxyModel::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QCoreApplication::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QCoreApplication::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QDataWidgetMapper::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QDataWidgetMapper::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QDateEdit::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QDateEdit::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QDateTimeEdit::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QDateTimeEdit::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QDesktopWidget::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QDesktopWidget::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QDial::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QDial::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QDialog::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QDialog::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QDialogButtonBox::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QDialogButtonBox::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QDirModel::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QDirModel::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QDockWidget::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QDockWidget::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QDoubleSpinBox::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QDoubleSpinBox::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QDoubleValidator::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QDoubleValidator::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QDrag::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QDrag::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QErrorMessage::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QErrorMessage::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QEventLoop::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QEventLoop::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QEventTransition::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QEventTransition::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QFile::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QFile::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QFileDevice::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QFileDevice::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QFileDialog::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QFileDialog::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QFileSelector::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QFileSelector::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QFileSystemModel::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QFileSystemModel::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QFileSystemWatcher::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QFileSystemWatcher::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QFinalState::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QFinalState::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QFocusFrame::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QFocusFrame::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QFontComboBox::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QFontComboBox::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QFontDialog::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QFontDialog::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QFormLayout::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QFormLayout::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QFrame::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QFrame::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QFutureWatcherBase::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QFutureWatcherBase::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QGesture::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QGesture::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QGraphicsAnchor::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QGraphicsAnchor::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QGraphicsBlurEffect::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QGraphicsBlurEffect::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QGraphicsColorizeEffect::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QGraphicsColorizeEffect::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QGraphicsDropShadowEffect::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QGraphicsDropShadowEffect::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QGraphicsEffect::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QGraphicsEffect::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QGraphicsItemAnimation::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QGraphicsItemAnimation::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QGraphicsObject::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QGraphicsObject::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QGraphicsOpacityEffect::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QGraphicsOpacityEffect::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QGraphicsProxyWidget::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QGraphicsProxyWidget::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QGraphicsRotation::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QGraphicsRotation::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QGraphicsScale::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QGraphicsScale::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QGraphicsScene::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QGraphicsScene::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QGraphicsTextItem::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QGraphicsTextItem::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QGraphicsTransform::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QGraphicsTransform::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QGraphicsView::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QGraphicsView::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QGraphicsWidget::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QGraphicsWidget::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QGridLayout::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QGridLayout::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QGroupBox::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QGroupBox::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QGuiApplication::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QGuiApplication::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QHBoxLayout::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QHBoxLayout::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QHeaderView::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QHeaderView::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QHistoryState::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QHistoryState::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QIODevice::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QIODevice::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QIdentityProxyModel::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QIdentityProxyModel::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QImageReader::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QImageReader::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QImageWriter::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QImageWriter::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QInputDialog::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QInputDialog::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QInputMethod::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QInputMethod::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QIntValidator::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QIntValidator::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QItemDelegate::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QItemDelegate::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QItemSelectionModel::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QItemSelectionModel::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QKeyEventTransition::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QKeyEventTransition::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QKeySequenceEdit::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QKeySequenceEdit::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QLCDNumber::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QLCDNumber::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QLabel::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QLabel::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QLayout::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QLayout::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QLineEdit::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QLineEdit::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QListView::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QListView::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QListWidget::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QListWidget::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QMainWindow::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QMainWindow::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QMdiArea::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QMdiArea::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QMdiSubWindow::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QMdiSubWindow::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QMenu::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QMenu::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QMenuBar::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QMenuBar::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QMessageBox::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QMessageBox::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QMetaObject::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QMimeData::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QMimeData::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QMouseEventTransition::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QMouseEventTransition::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QMovie::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QMovie::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QObject::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QObject::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QOffscreenSurface::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QOffscreenSurface::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QOpenGLContext::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QOpenGLContext::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QOpenGLContextGroup::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QOpenGLContextGroup::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QOpenGLDebugLogger::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QOpenGLDebugLogger::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QOpenGLShader::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QOpenGLShader::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QOpenGLShaderProgram::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QOpenGLShaderProgram::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QOpenGLTimeMonitor::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QOpenGLTimeMonitor::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QOpenGLTimerQuery::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QOpenGLTimerQuery::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QOpenGLVertexArrayObject::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QOpenGLVertexArrayObject::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QOpenGLWidget::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QOpenGLWidget::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QOpenGLWindow::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QOpenGLWindow::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QPaintDeviceWindow::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QPaintDeviceWindow::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QPanGesture::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QPanGesture::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QParallelAnimationGroup::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QParallelAnimationGroup::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QPauseAnimation::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QPauseAnimation::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QPdfWriter::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QPdfWriter::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QPinchGesture::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QPinchGesture::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QPlainTextDocumentLayout::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QPlainTextDocumentLayout::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QPlainTextEdit::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QPlainTextEdit::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QPluginLoader::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QPluginLoader::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QProcess::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QProcess::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QProgressBar::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QProgressBar::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QProgressDialog::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QProgressDialog::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QPropertyAnimation::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QPropertyAnimation::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QProxyStyle::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QProxyStyle::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QPushButton::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QPushButton::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QRadioButton::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QRadioButton::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QRasterWindow::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QRasterWindow::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QRegExpValidator::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QRegExpValidator::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QRegularExpressionValidator::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QRegularExpressionValidator::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QRubberBand::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QRubberBand::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QSaveFile::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QSaveFile::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QScreen::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QScreen::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QScrollArea::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QScrollArea::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QScrollBar::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QScrollBar::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QScroller::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QScroller::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QSequentialAnimationGroup::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QSequentialAnimationGroup::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QSessionManager::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QSessionManager::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QSettings::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QSettings::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QShortcut::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QShortcut::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QSignalMapper::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QSignalMapper::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QSignalTransition::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QSignalTransition::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QSizeGrip::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QSizeGrip::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QSlider::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QSlider::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QSocketNotifier::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QSocketNotifier::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QSortFilterProxyModel::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QSortFilterProxyModel::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QSpinBox::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QSpinBox::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QSplashScreen::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QSplashScreen::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QSplitter::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QSplitter::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QSplitterHandle::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QSplitterHandle::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QStackedLayout::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QStackedLayout::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QStackedWidget::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QStackedWidget::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QStandardItemModel::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QStandardItemModel::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QState::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QState::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QStateMachine::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QStateMachine::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QStatusBar::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QStatusBar::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QStringListModel::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QStringListModel::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QStyle::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QStyle::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QStyleHints::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QStyleHints::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QStyledItemDelegate::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QStyledItemDelegate::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QSwipeGesture::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QSwipeGesture::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QSyntaxHighlighter::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QSyntaxHighlighter::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QSystemTrayIcon::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QSystemTrayIcon::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QTabBar::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QTabBar::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QTabWidget::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QTabWidget::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QTableView::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QTableView::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QTableWidget::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QTableWidget::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QTapAndHoldGesture::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QTapAndHoldGesture::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QTapGesture::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QTapGesture::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QTemporaryFile::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QTemporaryFile::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QTextBlockGroup::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QTextBlockGroup::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QTextBrowser::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QTextBrowser::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QTextDocument::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QTextDocument::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QTextEdit::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QTextEdit::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QTextFrame::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QTextFrame::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QTextList::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QTextList::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QTextObject::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QTextObject::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QTextTable::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QTextTable::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QThread::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QThread::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QThreadPool::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QThreadPool::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QTimeEdit::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QTimeEdit::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QTimeLine::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QTimeLine::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QTimer::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QTimer::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QToolBar::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QToolBar::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QToolBox::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QToolBox::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QToolButton::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QToolButton::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QTranslator::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QTranslator::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QTransposeProxyModel::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QTransposeProxyModel::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QTreeView::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QTreeView::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QTreeWidget::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QTreeWidget::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QUndoGroup::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QUndoGroup::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QUndoStack::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QUndoStack::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QUndoView::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QUndoView::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QVBoxLayout::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QVBoxLayout::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QValidator::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QValidator::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QVariantAnimation::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QVariantAnimation::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QWidget::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QWidget::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QWidgetAction::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QWidgetAction::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QWindow::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QWindow::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QWizard::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QWizard::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString QWizardPage::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString QWizardPage::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString qt_gui_cpp::Plugin::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString qt_gui_cpp::Plugin::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString qt_gui_cpp::PluginBridge::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString qt_gui_cpp::PluginBridge::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QString qt_gui_cpp::PluginContext::tr(const char*,const char*,int) matches class "^.*$" and "^tr$"
 - QString qt_gui_cpp::PluginContext::trUtf8(const char*,const char*,int) matches class "^.*$" and "^trUtf8$"
 - QStringRef QXmlStreamAttributes::value(QLatin1String) matches class "^.*$" and "QLatin1String" matches "^QLatin1String$"
 - QStringRef QXmlStreamAttributes::value(QLatin1String,QLatin1String) matches class "^.*$" and "QLatin1String" matches "^QLatin1String$"
 - QStringRef QXmlStreamAttributes::value(const QString&,QLatin1String) matches class "^.*$" and "QLatin1String" matches "^QLatin1String$"
 - QStyleHintsPrivate* QStyleHints::d_func() matches class "^.*$" and "^d_func$"
 - QStylePrivate* QStyle::d_func() matches class "^.*$" and "^d_func$"
 - QStyledItemDelegatePrivate* QStyledItemDelegate::d_func() matches class "^.*$" and "^d_func$"
 - QSwipeGesturePrivate* QSwipeGesture::d_func() matches class "^.*$" and "^d_func$"
 - QSyntaxHighlighterPrivate* QSyntaxHighlighter::d_func() matches class "^.*$" and "^d_func$"
 - QSystemTrayIconPrivate* QSystemTrayIcon::d_func() matches class "^.*$" and "^d_func$"
 - QTabBarPrivate* QTabBar::d_func() matches class "^.*$" and "^d_func$"
 - QTabWidgetPrivate* QTabWidget::d_func() matches class "^.*$" and "^d_func$"
 - QTableViewPrivate* QTableView::d_func() matches class "^.*$" and "^d_func$"
 - QTableWidgetPrivate* QTableWidget::d_func() matches class "^.*$" and "^d_func$"
 - QTapAndHoldGesturePrivate* QTapAndHoldGesture::d_func() matches class "^.*$" and "^d_func$"
 - QTapGesturePrivate* QTapGesture::d_func() matches class "^.*$" and "^d_func$"
 - QTemporaryFilePrivate* QTemporaryFile::d_func() matches class "^.*$" and "^d_func$"
 - QTextBlockGroupPrivate* QTextBlockGroup::d_func() matches class "^.*$" and "^d_func$"
 - QTextBrowserPrivate* QTextBrowser::d_func() matches class "^.*$" and "^d_func$"
 - QTextDocumentPrivate* QTextDocument::d_func() matches class "^.*$" and "^d_func$"
 - QTextEditPrivate* QTextEdit::d_func() matches class "^.*$" and "^d_func$"
 - QTextFramePrivate* QTextFrame::d_func() matches class "^.*$" and "^d_func$"
 - QTextListPrivate* QTextList::d_func() matches class "^.*$" and "^d_func$"
 - QTextObjectPrivate* QTextObject::d_func() matches class "^.*$" and "^d_func$"
 - QTextStream& QTextStream::operator<<(QLatin1String) matches class "^.*$" and "QLatin1String" matches "^QLatin1String$"
 - QTextStreamPrivate* QTextStream::d_func() matches class "^.*$" and "^d_func$"
 - QTextTablePrivate* QTextTable::d_func() matches class "^.*$" and "^d_func$"
 - QThreadPoolPrivate* QThreadPool::d_func() matches class "^.*$" and "^d_func$"
 - QThreadPrivate* QThread::d_func() matches class "^.*$" and "^d_func$"
 - QTimeLinePrivate* QTimeLine::d_func() matches class "^.*$" and "^d_func$"
 - QToolBarPrivate* QToolBar::d_func() matches class "^.*$" and "^d_func$"
 - QToolBoxPrivate* QToolBox::d_func() matches class "^.*$" and "^d_func$"
 - QToolButtonPrivate* QToolButton::d_func() matches class "^.*$" and "^d_func$"
 - QTranslatorPrivate* QTranslator::d_func() matches class "^.*$" and "^d_func$"
 - QTransposeProxyModelPrivate* QTransposeProxyModel::d_func() matches class "^.*$" and "^d_func$"
 - QTreeViewPrivate* QTreeView::d_func() matches class "^.*$" and "^d_func$"
 - QTreeWidgetItemIteratorPrivate* QTreeWidgetItemIterator::d_func() matches class "^.*$" and "^d_func$"
 - QTreeWidgetPrivate* QTreeWidget::d_func() matches class "^.*$" and "^d_func$"
 - QUndoGroupPrivate* QUndoGroup::d_func() matches class "^.*$" and "^d_func$"
 - QUndoStackPrivate* QUndoStack::d_func() matches class "^.*$" and "^d_func$"
 - QUndoViewPrivate* QUndoView::d_func() matches class "^.*$" and "^d_func$"
 - QUrl::DataPtr& QUrl::data_ptr() matches class "^.*$" and "^data_ptr$"
 - QUrlQuery::DataPtr& QUrlQuery::data_ptr() matches class "^.*$" and "^data_ptr$"
 - QUuid QUuid::fromString(QLatin1String) matches class "^.*$" and "QLatin1String" matches "^QLatin1String$"
 - QValidatorPrivate* QValidator::d_func() matches class "^.*$" and "^d_func$"
 - QVariantAnimationPrivate* QVariantAnimation::d_func() matches class "^.*$" and "^d_func$"
 - QVector<T>& QVector::operator=(std::initializer_list<T>) matches class "^.*$" and "std::initializer_list<T>" matches "^std::initializer_list<.*$"
 - QVersionNumber QVersionNumber::fromString(QLatin1String,int*) matches class "^.*$" and "QLatin1String" matches "^QLatin1String$"
 - QWidgetActionPrivate* QWidgetAction::d_func() matches class "^.*$" and "^d_func$"
 - QWidgetPrivate* QWidget::d_func() matches class "^.*$" and "^d_func$"
 - QWindowPrivate* QWindow::d_func() matches class "^.*$" and "^d_func$"
 - QWizardPagePrivate* QWizardPage::d_func() matches class "^.*$" and "^d_func$"
 - QWizardPrivate* QWizard::d_func() matches class "^.*$" and "^d_func$"
 - QXmlStreamReaderPrivate* QXmlStreamReader::d_func() matches class "^.*$" and "^d_func$"
 - QXmlStreamWriterPrivate* QXmlStreamWriter::d_func() matches class "^.*$" and "^d_func$"
 - Qt::TimerType QTimer::defaultTypeFor(std::chrono::milliseconds) matches class "^.*$" and "std::chrono::milliseconds" matches "^std\:\:chrono\:\:milliseconds$"
 - bool QBitArray::isDetached() matches class "^.*$" and "^isDetached$"
 - bool QBrush::isDetached() matches class "^.*$" and "^isDetached$"
 - bool QByteArray::isDetached() matches class "^.*$" and "^isDetached$"
 - bool QCborMap::contains(QLatin1String) matches class "^.*$" and "QLatin1String" matches "^QLatin1String$"
 - bool QColor::isValidColor(QLatin1String) matches class "^.*$" and "QLatin1String" matches "^QLatin1String$"
 - bool QCoreApplication::compressEvent(QEvent*,QObject*,QPostEventList*) matches class "^QCoreApplication$" and "^compressEvent$"
 - bool QFile::open(FILE*,QIODevice::OpenMode,QFileDevice::FileHandleFlags) matches class "^.*$" and "FILE*" matches "^FILE\*$"
 - bool QHash::isDetached() matches class "^.*$" and "^isDetached$"
 - bool QHash::isValidNode(QHashData::Node*) matches class "^.*$" and "QHashData::Node*" matches "^QHashData\:\:Node\*$"
 - bool QIcon::isDetached() matches class "^.*$" and "^isDetached$"
 - bool QImage::isDetached() matches class "^.*$" and "^isDetached$"
 - bool QKeySequence::isDetached() matches class "^.*$" and "^isDetached$"
 - bool QLinkedList::isDetached() matches class "^.*$" and "^isDetached$"
 - bool QList::contains_impl(const T&,QListData::ArrayCompatibleLayout) matches class "^.*$" and "QListData::ArrayCompatibleLayout" matches "^QListData\:\:ArrayCompatibleLayout$"
 - bool QList::contains_impl(const T&,QListData::NotArrayCompatibleLayout) matches class "^.*$" and "QListData::NotArrayCompatibleLayout" matches "^QListData\:\:NotArrayCompatibleLayout$"
 - bool QList::isDetached() matches class "^.*$" and "^isDetached$"
 - bool QList::op_eq_impl(const QList<T>&,QListData::ArrayCompatibleLayout) matches class "^.*$" and "QListData::ArrayCompatibleLayout" matches "^QListData\:\:ArrayCompatibleLayout$"
 - bool QList::op_eq_impl(const QList<T>&,QListData::NotArrayCompatibleLayout) matches class "^.*$" and "QListData::NotArrayCompatibleLayout" matches "^QListData\:\:NotArrayCompatibleLayout$"
 - bool QMap::isDetached() matches class "^.*$" and "^isDetached$"
 - bool QMetaObject::invokeMethodImpl(QObject*,QtPrivate::QSlotObjectBase*,Qt::ConnectionType,void*) matches class "^.*$" and "QtPrivate::QSlotObjectBase*" matches "^QtPrivate\:\:QSlotObjectBase\*$"
 - bool QOperatingSystemVersion::isAnyOfType(std::initializer_list<QOperatingSystemVersion::OSType>) matches class "^.*$" and "std::initializer_list<QOperatingSystemVersion::OSType>" matches "^std::initializer_list<.*$"
 - bool QPen::isDetached() matches class "^.*$" and "^isDetached$"
 - bool QPicture::isDetached() matches class "^.*$" and "^isDetached$"
 - bool QPixmap::isDetached() matches class "^.*$" and "^isDetached$"
 - bool QSet::isDetached() matches class "^.*$" and "^isDetached$"
 - bool QUrl::isDetached() matches class "^.*$" and "^isDetached$"
 - bool QUrlQuery::isDetached() matches class "^.*$" and "^isDetached$"
 - bool QVector::isDetached() matches class "^.*$" and "^isDetached$"
 - bool QXmlStreamAttributes::hasAttribute(QLatin1String) matches class "^.*$" and "QLatin1String" matches "^QLatin1String$"
 - const QAbstractAnimationPrivate* QAbstractAnimation::d_func() matches class "^.*$" and "^d_func$"
 - const QAbstractButtonPrivate* QAbstractButton::d_func() matches class "^.*$" and "^d_func$"
 - const QAbstractEventDispatcherPrivate* QAbstractEventDispatcher::d_func() matches class "^.*$" and "^d_func$"
 - const QAbstractGraphicsShapeItemPrivate* QAbstractGraphicsShapeItem::d_func() matches class "^.*$" and "^d_func$"
 - const QAbstractItemDelegatePrivate* QAbstractItemDelegate::d_func() matches class "^.*$" and "^d_func$"
 - const QAbstractItemModelPrivate* QAbstractItemModel::d_func() matches class "^.*$" and "^d_func$"
 - const QAbstractItemViewPrivate* QAbstractItemView::d_func() matches class "^.*$" and "^d_func$"
 - const QAbstractOpenGLFunctionsPrivate* QAbstractOpenGLFunctions::d_func() matches class "^.*$" and "^d_func$"
 - const QAbstractProxyModelPrivate* QAbstractProxyModel::d_func() matches class "^.*$" and "^d_func$"
 - const QAbstractScrollAreaPrivate* QAbstractScrollArea::d_func() matches class "^.*$" and "^d_func$"
 - const QAbstractSliderPrivate* QAbstractSlider::d_func() matches class "^.*$" and "^d_func$"
 - const QAbstractSpinBoxPrivate* QAbstractSpinBox::d_func() matches class "^.*$" and "^d_func$"
 - const QAbstractStatePrivate* QAbstractState::d_func() matches class "^.*$" and "^d_func$"
 - const QAbstractTextDocumentLayoutPrivate* QAbstractTextDocumentLayout::d_func() matches class "^.*$" and "^d_func$"
 - const QAbstractTransitionPrivate* QAbstractTransition::d_func() matches class "^.*$" and "^d_func$"
 - const QActionGroupPrivate* QActionGroup::d_func() matches class "^.*$" and "^d_func$"
 - const QActionPrivate* QAction::d_func() matches class "^.*$" and "^d_func$"
 - const QAnimationGroupPrivate* QAnimationGroup::d_func() matches class "^.*$" and "^d_func$"
 - const QApplicationPrivate* QApplication::d_func() matches class "^.*$" and "^d_func$"
 - const QBoxLayoutPrivate* QBoxLayout::d_func() matches class "^.*$" and "^d_func$"
 - const QBufferPrivate* QBuffer::d_func() matches class "^.*$" and "^d_func$"
 - const QButtonGroupPrivate* QButtonGroup::d_func() matches class "^.*$" and "^d_func$"
 - const QCalendarWidgetPrivate* QCalendarWidget::d_func() matches class "^.*$" and "^d_func$"
 - const QCborValue QCborMap::operator[](QLatin1String) matches class "^.*$" and "QLatin1String" matches "^QLatin1String$"
 - const QCborValue QCborValue::operator[](QLatin1String) matches class "^.*$" and "QLatin1String" matches "^QLatin1String$"
 - const QCheckBoxPrivate* QCheckBox::d_func() matches class "^.*$" and "^d_func$"
 - const QColorDialogPrivate* QColorDialog::d_func() matches class "^.*$" and "^d_func$"
 - const QColorSpacePrivate* QColorSpace::d_func() matches class "^.*$" and "^d_func$"
 - const QColumnViewPrivate* QColumnView::d_func() matches class "^.*$" and "^d_func$"
 - const QComboBoxPrivate* QComboBox::d_func() matches class "^.*$" and "^d_func$"
 - const QCommandLinkButtonPrivate* QCommandLinkButton::d_func() matches class "^.*$" and "^d_func$"
 - const QCommonStylePrivate* QCommonStyle::d_func() matches class "^.*$" and "^d_func$"
 - const QCompleterPrivate* QCompleter::d_func() matches class "^.*$" and "^d_func$"
 - const QConcatenateTablesProxyModelPrivate* QConcatenateTablesProxyModel::d_func() matches class "^.*$" and "^d_func$"
 - const QCoreApplicationPrivate* QCoreApplication::d_func() matches class "^.*$" and "^d_func$"
 - const QDataWidgetMapperPrivate* QDataWidgetMapper::d_func() matches class "^.*$" and "^d_func$"
 - const QDateTimeEditPrivate* QDateTimeEdit::d_func() matches class "^.*$" and "^d_func$"
 - const QDesktopWidgetPrivate* QDesktopWidget::d_func() matches class "^.*$" and "^d_func$"
 - const QDialPrivate* QDial::d_func() matches class "^.*$" and "^d_func$"
 - const QDialogButtonBoxPrivate* QDialogButtonBox::d_func() matches class "^.*$" and "^d_func$"
 - const QDialogPrivate* QDialog::d_func() matches class "^.*$" and "^d_func$"
 - const QDirModelPrivate* QDirModel::d_func() matches class "^.*$" and "^d_func$"
 - const QDirPrivate* QDir::d_func() matches class "^.*$" and "^d_func$"
 - const QDockWidgetPrivate* QDockWidget::d_func() matches class "^.*$" and "^d_func$"
 - const QDoubleSpinBoxPrivate* QDoubleSpinBox::d_func() matches class "^.*$" and "^d_func$"
 - const QDoubleValidatorPrivate* QDoubleValidator::d_func() matches class "^.*$" and "^d_func$"
 - const QDragPrivate* QDrag::d_func() matches class "^.*$" and "^d_func$"
 - const QErrorMessagePrivate* QErrorMessage::d_func() matches class "^.*$" and "^d_func$"
 - const QEventLoopPrivate* QEventLoop::d_func() matches class "^.*$" and "^d_func$"
 - const QEventTransitionPrivate* QEventTransition::d_func() matches class "^.*$" and "^d_func$"
 - const QFileDevicePrivate* QFileDevice::d_func() matches class "^.*$" and "^d_func$"
 - const QFileDialogPrivate* QFileDialog::d_func() matches class "^.*$" and "^d_func$"
 - const QFileIconProviderPrivate* QFileIconProvider::d_func() matches class "^.*$" and "^d_func$"
 - const QFileInfoPrivate* QFileInfo::d_func() matches class "^.*$" and "^d_func$"
 - const QFilePrivate* QFile::d_func() matches class "^.*$" and "^d_func$"
 - const QFileSelectorPrivate* QFileSelector::d_func() matches class "^.*$" and "^d_func$"
 - const QFileSystemModelPrivate* QFileSystemModel::d_func() matches class "^.*$" and "^d_func$"
 - const QFileSystemWatcherPrivate* QFileSystemWatcher::d_func() matches class "^.*$" and "^d_func$"
 - const QFinalStatePrivate* QFinalState::d_func() matches class "^.*$" and "^d_func$"
 - const QFocusFramePrivate* QFocusFrame::d_func() matches class "^.*$" and "^d_func$"
 - const QFontComboBoxPrivate* QFontComboBox::d_func() matches class "^.*$" and "^d_func$"
 - const QFontDialogPrivate* QFontDialog::d_func() matches class "^.*$" and "^d_func$"
 - const QFormLayoutPrivate* QFormLayout::d_func() matches class "^.*$" and "^d_func$"
 - const QFramePrivate* QFrame::d_func() matches class "^.*$" and "^d_func$"
 - const QFutureWatcherBasePrivate* QFutureWatcherBase::d_func() matches class "^.*$" and "^d_func$"
 - const QGesturePrivate* QGesture::d_func() matches class "^.*$" and "^d_func$"
 - const QGraphicsAnchorLayoutPrivate* QGraphicsAnchorLayout::d_func() matches class "^.*$" and "^d_func$"
 - const QGraphicsAnchorPrivate* QGraphicsAnchor::d_func() matches class "^.*$" and "^d_func$"
 - const QGraphicsBlurEffectPrivate* QGraphicsBlurEffect::d_func() matches class "^.*$" and "^d_func$"
 - const QGraphicsColorizeEffectPrivate* QGraphicsColorizeEffect::d_func() matches class "^.*$" and "^d_func$"
 - const QGraphicsDropShadowEffectPrivate* QGraphicsDropShadowEffect::d_func() matches class "^.*$" and "^d_func$"
 - const QGraphicsEffectPrivate* QGraphicsEffect::d_func() matches class "^.*$" and "^d_func$"
 - const QGraphicsEllipseItemPrivate* QGraphicsEllipseItem::d_func() matches class "^.*$" and "^d_func$"
 - const QGraphicsGridLayoutPrivate* QGraphicsGridLayout::d_func() matches class "^.*$" and "^d_func$"
 - const QGraphicsItemGroupPrivate* QGraphicsItemGroup::d_func() matches class "^.*$" and "^d_func$"
 - const QGraphicsItemPrivate* QGraphicsItem::d_func() matches class "^.*$" and "^d_func$"
 - const QGraphicsLayoutItemPrivate* QGraphicsLayoutItem::d_func() matches class "^.*$" and "^d_func$"
 - const QGraphicsLayoutPrivate* QGraphicsLayout::d_func() matches class "^.*$" and "^d_func$"
 - const QGraphicsLineItemPrivate* QGraphicsLineItem::d_func() matches class "^.*$" and "^d_func$"
 - const QGraphicsLinearLayoutPrivate* QGraphicsLinearLayout::d_func() matches class "^.*$" and "^d_func$"
 - const QGraphicsOpacityEffectPrivate* QGraphicsOpacityEffect::d_func() matches class "^.*$" and "^d_func$"
 - const QGraphicsPathItemPrivate* QGraphicsPathItem::d_func() matches class "^.*$" and "^d_func$"
 - const QGraphicsPixmapItemPrivate* QGraphicsPixmapItem::d_func() matches class "^.*$" and "^d_func$"
 - const QGraphicsPolygonItemPrivate* QGraphicsPolygonItem::d_func() matches class "^.*$" and "^d_func$"
 - const QGraphicsProxyWidgetPrivate* QGraphicsProxyWidget::d_func() matches class "^.*$" and "^d_func$"
 - const QGraphicsRectItemPrivate* QGraphicsRectItem::d_func() matches class "^.*$" and "^d_func$"
 - const QGraphicsRotationPrivate* QGraphicsRotation::d_func() matches class "^.*$" and "^d_func$"
 - const QGraphicsScalePrivate* QGraphicsScale::d_func() matches class "^.*$" and "^d_func$"
 - const QGraphicsSceneContextMenuEventPrivate* QGraphicsSceneContextMenuEvent::d_func() matches class "^.*$" and "^d_func$"
 - const QGraphicsSceneDragDropEventPrivate* QGraphicsSceneDragDropEvent::d_func() matches class "^.*$" and "^d_func$"
 - const QGraphicsSceneEventPrivate* QGraphicsSceneEvent::d_func() matches class "^.*$" and "^d_func$"
 - const QGraphicsSceneHelpEventPrivate* QGraphicsSceneHelpEvent::d_func() matches class "^.*$" and "^d_func$"
 - const QGraphicsSceneHoverEventPrivate* QGraphicsSceneHoverEvent::d_func() matches class "^.*$" and "^d_func$"
 - const QGraphicsSceneMouseEventPrivate* QGraphicsSceneMouseEvent::d_func() matches class "^.*$" and "^d_func$"
 - const QGraphicsSceneMoveEventPrivate* QGraphicsSceneMoveEvent::d_func() matches class "^.*$" and "^d_func$"
 - const QGraphicsScenePrivate* QGraphicsScene::d_func() matches class "^.*$" and "^d_func$"
 - const QGraphicsSceneResizeEventPrivate* QGraphicsSceneResizeEvent::d_func() matches class "^.*$" and "^d_func$"
 - const QGraphicsSceneWheelEventPrivate* QGraphicsSceneWheelEvent::d_func() matches class "^.*$" and "^d_func$"
 - const QGraphicsSimpleTextItemPrivate* QGraphicsSimpleTextItem::d_func() matches class "^.*$" and "^d_func$"
 - const QGraphicsTransformPrivate* QGraphicsTransform::d_func() matches class "^.*$" and "^d_func$"
 - const QGraphicsViewPrivate* QGraphicsView::d_func() matches class "^.*$" and "^d_func$"
 - const QGraphicsWidgetPrivate* QGraphicsWidget::d_func() matches class "^.*$" and "^d_func$"
 - const QGridLayoutPrivate* QGridLayout::d_func() matches class "^.*$" and "^d_func$"
 - const QGroupBoxPrivate* QGroupBox::d_func() matches class "^.*$" and "^d_func$"
 - const QGuiApplicationPrivate* QGuiApplication::d_func() matches class "^.*$" and "^d_func$"
 - const QHeaderViewPrivate* QHeaderView::d_func() matches class "^.*$" and "^d_func$"
 - const QHistoryStatePrivate* QHistoryState::d_func() matches class "^.*$" and "^d_func$"
 - const QIODevicePrivate* QIODevice::d_func() matches class "^.*$" and "^d_func$"
 - const QIdentityProxyModelPrivate* QIdentityProxyModel::d_func() matches class "^.*$" and "^d_func$"
 - const QImageIOHandlerPrivate* QImageIOHandler::d_func() matches class "^.*$" and "^d_func$"
 - const QInputDialogPrivate* QInputDialog::d_func() matches class "^.*$" and "^d_func$"
 - const QInputMethodPrivate* QInputMethod::d_func() matches class "^.*$" and "^d_func$"
 - const QItemDelegatePrivate* QItemDelegate::d_func() matches class "^.*$" and "^d_func$"
 - const QItemSelectionModelPrivate* QItemSelectionModel::d_func() matches class "^.*$" and "^d_func$"
 - const QJsonValue QJsonDocument::operator[](QLatin1String) matches class "^.*$" and "QLatin1String" matches "^QLatin1String$"
 - const QJsonValue QJsonValue::operator[](QLatin1String) matches class "^.*$" and "QLatin1String" matches "^QLatin1String$"
 - const QKeyEventTransitionPrivate* QKeyEventTransition::d_func() matches class "^.*$" and "^d_func$"
 - const QKeySequenceEditPrivate* QKeySequenceEdit::d_func() matches class "^.*$" and "^d_func$"
 - const QLCDNumberPrivate* QLCDNumber::d_func() matches class "^.*$" and "^d_func$"
 - const QLabelPrivate* QLabel::d_func() matches class "^.*$" and "^d_func$"
 - const QLayoutPrivate* QLayout::d_func() matches class "^.*$" and "^d_func$"
 - const QLineEditPrivate* QLineEdit::d_func() matches class "^.*$" and "^d_func$"
 - const QListViewPrivate* QListView::d_func() matches class "^.*$" and "^d_func$"
 - const QListWidgetPrivate* QListWidget::d_func() matches class "^.*$" and "^d_func$"
 - const QLockFilePrivate* QLockFile::d_func() matches class "^.*$" and "^d_func$"
 - const QMainWindowPrivate* QMainWindow::d_func() matches class "^.*$" and "^d_func$"
 - const QMdiAreaPrivate* QMdiArea::d_func() matches class "^.*$" and "^d_func$"
 - const QMdiSubWindowPrivate* QMdiSubWindow::d_func() matches class "^.*$" and "^d_func$"
 - const QMenuBarPrivate* QMenuBar::d_func() matches class "^.*$" and "^d_func$"
 - const QMenuPrivate* QMenu::d_func() matches class "^.*$" and "^d_func$"
 - const QMessageBoxPrivate* QMessageBox::d_func() matches class "^.*$" and "^d_func$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::Alignment) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::ApplicationAttribute) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::ApplicationState) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::ArrowType) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::AspectRatioMode) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::Axis) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::BGMode) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::BrushStyle) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::CaseSensitivity) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::CheckState) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::ChecksumType) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::ClipOperation) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::ConnectionType) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::ContextMenuPolicy) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::Corner) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::CursorMoveStyle) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::CursorShape) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::DateFormat) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::DayOfWeek) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::DockWidgetArea) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::DockWidgetAreas) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::DropAction) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::DropActions) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::Edge) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::Edges) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::EnterKeyType) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::FillRule) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::FocusPolicy) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::FocusReason) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::GestureState) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::GestureType) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::GlobalColor) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::HighDpiScaleFactorRoundingPolicy) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::ImageConversionFlags) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::InputMethodHint) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::InputMethodHints) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::InputMethodQueries) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::InputMethodQuery) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::ItemDataRole) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::ItemFlags) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::ItemSelectionMode) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::ItemSelectionOperation) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::Key) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::KeyboardModifiers) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::LayoutDirection) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::MaskMode) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::MatchFlags) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::MouseButtons) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::MouseEventFlag) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::MouseEventSource) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::NativeGestureType) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::Orientation) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::Orientations) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::PenCapStyle) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::PenJoinStyle) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::PenStyle) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::ScreenOrientation) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::ScreenOrientations) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::ScrollBarPolicy) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::ScrollPhase) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::ShortcutContext) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::SizeHint) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::SizeMode) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::SortOrder) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::SplitBehavior) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::TabFocusBehavior) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::TextElideMode) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::TextFlag) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::TextFormat) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::TextInteractionFlag) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::TextInteractionFlags) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::TimeSpec) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::TimerType) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::ToolBarArea) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::ToolBarAreas) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::ToolButtonStyle) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::TouchPointStates) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::TransformationMode) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::WidgetAttribute) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::WindowFlags) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::WindowModality) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::WindowState) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::WindowStates) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMetaObject* Qt::qt_getEnumMetaObject(Qt::WindowType) matches class "^Qt$" and "^qt_getEnumMetaObject$"
 - const QMimeDataPrivate* QMimeData::d_func() matches class "^.*$" and "^d_func$"
 - const QMouseEventTransitionPrivate* QMouseEventTransition::d_func() matches class "^.*$" and "^d_func$"
 - const QMoviePrivate* QMovie::d_func() matches class "^.*$" and "^d_func$"
 - const QObjectPrivate* QObject::d_func() matches class "^.*$" and "^d_func$"
 - const QOffscreenSurfacePrivate* QOffscreenSurface::d_func() matches class "^.*$" and "^d_func$"
 - const QOpenGLBufferPrivate* QOpenGLBuffer::d_func() matches class "^.*$" and "^d_func$"
 - const QOpenGLContextGroupPrivate* QOpenGLContextGroup::d_func() matches class "^.*$" and "^d_func$"
 - const QOpenGLContextPrivate* QOpenGLContext::d_func() matches class "^.*$" and "^d_func$"
 - const QOpenGLDebugLoggerPrivate* QOpenGLDebugLogger::d_func() matches class "^.*$" and "^d_func$"
 - const QOpenGLExtraFunctionsPrivate* QOpenGLExtraFunctions::d_func() matches class "^.*$" and "^d_func$"
 - const QOpenGLFramebufferObjectPrivate* QOpenGLFramebufferObject::d_func() matches class "^.*$" and "^d_func$"
 - const QOpenGLShaderPrivate* QOpenGLShader::d_func() matches class "^.*$" and "^d_func$"
 - const QOpenGLShaderProgramPrivate* QOpenGLShaderProgram::d_func() matches class "^.*$" and "^d_func$"
 - const QOpenGLTextureBlitterPrivate* QOpenGLTextureBlitter::d_func() matches class "^.*$" and "^d_func$"
 - const QOpenGLTexturePrivate* QOpenGLTexture::d_func() matches class "^.*$" and "^d_func$"
 - const QOpenGLTimeMonitorPrivate* QOpenGLTimeMonitor::d_func() matches class "^.*$" and "^d_func$"
 - const QOpenGLTimerQueryPrivate* QOpenGLTimerQuery::d_func() matches class "^.*$" and "^d_func$"
 - const QOpenGLVertexArrayObjectPrivate* QOpenGLVertexArrayObject::d_func() matches class "^.*$" and "^d_func$"
 - const QOpenGLWidgetPrivate* QOpenGLWidget::d_func() matches class "^.*$" and "^d_func$"
 - const QOpenGLWindowPrivate* QOpenGLWindow::d_func() matches class "^.*$" and "^d_func$"
 - const QPaintDeviceWindowPrivate* QPaintDeviceWindow::d_func() matches class "^.*$" and "^d_func$"
 - const QPaintEnginePrivate* QPaintEngine::d_func() matches class "^.*$" and "^d_func$"
 - const QPainterPathStrokerPrivate* QPainterPathStroker::d_func() matches class "^.*$" and "^d_func$"
 - const QPainterPrivate* QPainter::d_func() matches class "^.*$" and "^d_func$"
 - const QPanGesturePrivate* QPanGesture::d_func() matches class "^.*$" and "^d_func$"
 - const QParallelAnimationGroupPrivate* QParallelAnimationGroup::d_func() matches class "^.*$" and "^d_func$"
 - const QPauseAnimationPrivate* QPauseAnimation::d_func() matches class "^.*$" and "^d_func$"
 - const QPdfWriterPrivate* QPdfWriter::d_func() matches class "^.*$" and "^d_func$"
 - const QPicturePrivate* QPicture::d_func() matches class "^.*$" and "^d_func$"
 - const QPinchGesturePrivate* QPinchGesture::d_func() matches class "^.*$" and "^d_func$"
 - const QPlainTextDocumentLayoutPrivate* QPlainTextDocumentLayout::d_func() matches class "^.*$" and "^d_func$"
 - const QPlainTextEditPrivate* QPlainTextEdit::d_func() matches class "^.*$" and "^d_func$"
 - const QProcessPrivate* QProcess::d_func() matches class "^.*$" and "^d_func$"
 - const QProgressBarPrivate* QProgressBar::d_func() matches class "^.*$" and "^d_func$"
 - const QProgressDialogPrivate* QProgressDialog::d_func() matches class "^.*$" and "^d_func$"
 - const QPropertyAnimationPrivate* QPropertyAnimation::d_func() matches class "^.*$" and "^d_func$"
 - const QProxyStylePrivate* QProxyStyle::d_func() matches class "^.*$" and "^d_func$"
 - const QPushButtonPrivate* QPushButton::d_func() matches class "^.*$" and "^d_func$"
 - const QRadioButtonPrivate* QRadioButton::d_func() matches class "^.*$" and "^d_func$"
 - const QRasterWindowPrivate* QRasterWindow::d_func() matches class "^.*$" and "^d_func$"
 - const QRegularExpressionValidatorPrivate* QRegularExpressionValidator::d_func() matches class "^.*$" and "^d_func$"
 - const QResourcePrivate* QResource::d_func() matches class "^.*$" and "^d_func$"
 - const QRubberBandPrivate* QRubberBand::d_func() matches class "^.*$" and "^d_func$"
 - const QSaveFilePrivate* QSaveFile::d_func() matches class "^.*$" and "^d_func$"
 - const QScreenPrivate* QScreen::d_func() matches class "^.*$" and "^d_func$"
 - const QScrollAreaPrivate* QScrollArea::d_func() matches class "^.*$" and "^d_func$"
 - const QScrollBarPrivate* QScrollBar::d_func() matches class "^.*$" and "^d_func$"
 - const QScrollerPrivate* QScroller::d_func() matches class "^.*$" and "^d_func$"
 - const QSequentialAnimationGroupPrivate* QSequentialAnimationGroup::d_func() matches class "^.*$" and "^d_func$"
 - const QSessionManagerPrivate* QSessionManager::d_func() matches class "^.*$" and "^d_func$"
 - const QSettingsPrivate* QSettings::d_func() matches class "^.*$" and "^d_func$"
 - const QShortcutPrivate* QShortcut::d_func() matches class "^.*$" and "^d_func$"
 - const QSignalMapperPrivate* QSignalMapper::d_func() matches class "^.*$" and "^d_func$"
 - const QSignalTransitionPrivate* QSignalTransition::d_func() matches class "^.*$" and "^d_func$"
 - const QSizeGripPrivate* QSizeGrip::d_func() matches class "^.*$" and "^d_func$"
 - const QSliderPrivate* QSlider::d_func() matches class "^.*$" and "^d_func$"
 - const QSocketNotifierPrivate* QSocketNotifier::d_func() matches class "^.*$" and "^d_func$"
 - const QSortFilterProxyModelPrivate* QSortFilterProxyModel::d_func() matches class "^.*$" and "^d_func$"
 - const QSpinBoxPrivate* QSpinBox::d_func() matches class "^.*$" and "^d_func$"
 - const QSplashScreenPrivate* QSplashScreen::d_func() matches class "^.*$" and "^d_func$"
 - const QSplitterHandlePrivate* QSplitterHandle::d_func() matches class "^.*$" and "^d_func$"
 - const QSplitterPrivate* QSplitter::d_func() matches class "^.*$" and "^d_func$"
 - const QStackedLayoutPrivate* QStackedLayout::d_func() matches class "^.*$" and "^d_func$"
 - const QStackedWidgetPrivate* QStackedWidget::d_func() matches class "^.*$" and "^d_func$"
 - const QStandardItemModelPrivate* QStandardItemModel::d_func() matches class "^.*$" and "^d_func$"
 - const QStandardItemPrivate* QStandardItem::d_func() matches class "^.*$" and "^d_func$"
 - const QStateMachinePrivate* QStateMachine::d_func() matches class "^.*$" and "^d_func$"
 - const QStatePrivate* QState::d_func() matches class "^.*$" and "^d_func$"
 - const QStatusBarPrivate* QStatusBar::d_func() matches class "^.*$" and "^d_func$"
 - const QStyleHintsPrivate* QStyleHints::d_func() matches class "^.*$" and "^d_func$"
 - const QStylePrivate* QStyle::d_func() matches class "^.*$" and "^d_func$"
 - const QStyledItemDelegatePrivate* QStyledItemDelegate::d_func() matches class "^.*$" and "^d_func$"
 - const QSwipeGesturePrivate* QSwipeGesture::d_func() matches class "^.*$" and "^d_func$"
 - const QSyntaxHighlighterPrivate* QSyntaxHighlighter::d_func() matches class "^.*$" and "^d_func$"
 - const QSystemTrayIconPrivate* QSystemTrayIcon::d_func() matches class "^.*$" and "^d_func$"
 - const QTabBarPrivate* QTabBar::d_func() matches class "^.*$" and "^d_func$"
 - const QTabWidgetPrivate* QTabWidget::d_func() matches class "^.*$" and "^d_func$"
 - const QTableViewPrivate* QTableView::d_func() matches class "^.*$" and "^d_func$"
 - const QTableWidgetPrivate* QTableWidget::d_func() matches class "^.*$" and "^d_func$"
 - const QTapAndHoldGesturePrivate* QTapAndHoldGesture::d_func() matches class "^.*$" and "^d_func$"
 - const QTapGesturePrivate* QTapGesture::d_func() matches class "^.*$" and "^d_func$"
 - const QTemporaryFilePrivate* QTemporaryFile::d_func() matches class "^.*$" and "^d_func$"
 - const QTextBlockGroupPrivate* QTextBlockGroup::d_func() matches class "^.*$" and "^d_func$"
 - const QTextBrowserPrivate* QTextBrowser::d_func() matches class "^.*$" and "^d_func$"
 - const QTextDocumentPrivate* QTextDocument::d_func() matches class "^.*$" and "^d_func$"
 - const QTextEditPrivate* QTextEdit::d_func() matches class "^.*$" and "^d_func$"
 - const QTextFramePrivate* QTextFrame::d_func() matches class "^.*$" and "^d_func$"
 - const QTextListPrivate* QTextList::d_func() matches class "^.*$" and "^d_func$"
 - const QTextObjectPrivate* QTextObject::d_func() matches class "^.*$" and "^d_func$"
 - const QTextStreamPrivate* QTextStream::d_func() matches class "^.*$" and "^d_func$"
 - const QTextTablePrivate* QTextTable::d_func() matches class "^.*$" and "^d_func$"
 - const QThreadPoolPrivate* QThreadPool::d_func() matches class "^.*$" and "^d_func$"
 - const QThreadPrivate* QThread::d_func() matches class "^.*$" and "^d_func$"
 - const QTimeLinePrivate* QTimeLine::d_func() matches class "^.*$" and "^d_func$"
 - const QToolBarPrivate* QToolBar::d_func() matches class "^.*$" and "^d_func$"
 - const QToolBoxPrivate* QToolBox::d_func() matches class "^.*$" and "^d_func$"
 - const QToolButtonPrivate* QToolButton::d_func() matches class "^.*$" and "^d_func$"
 - const QTranslatorPrivate* QTranslator::d_func() matches class "^.*$" and "^d_func$"
 - const QTransposeProxyModelPrivate* QTransposeProxyModel::d_func() matches class "^.*$" and "^d_func$"
 - const QTreeViewPrivate* QTreeView::d_func() matches class "^.*$" and "^d_func$"
 - const QTreeWidgetItemIteratorPrivate* QTreeWidgetItemIterator::d_func() matches class "^.*$" and "^d_func$"
 - const QTreeWidgetPrivate* QTreeWidget::d_func() matches class "^.*$" and "^d_func$"
 - const QUndoGroupPrivate* QUndoGroup::d_func() matches class "^.*$" and "^d_func$"
 - const QUndoStackPrivate* QUndoStack::d_func() matches class "^.*$" and "^d_func$"
 - const QUndoViewPrivate* QUndoView::d_func() matches class "^.*$" and "^d_func$"
 - const QValidatorPrivate* QValidator::d_func() matches class "^.*$" and "^d_func$"
 - const QVariantAnimationPrivate* QVariantAnimation::d_func() matches class "^.*$" and "^d_func$"
 - const QWidgetActionPrivate* QWidgetAction::d_func() matches class "^.*$" and "^d_func$"
 - const QWidgetPrivate* QWidget::d_func() matches class "^.*$" and "^d_func$"
 - const QWindowPrivate* QWindow::d_func() matches class "^.*$" and "^d_func$"
 - const QWizardPagePrivate* QWizardPage::d_func() matches class "^.*$" and "^d_func$"
 - const QWizardPrivate* QWizard::d_func() matches class "^.*$" and "^d_func$"
 - const QXmlStreamReaderPrivate* QXmlStreamReader::d_func() matches class "^.*$" and "^d_func$"
 - const QXmlStreamWriterPrivate* QXmlStreamWriter::d_func() matches class "^.*$" and "^d_func$"
 - const char* Qt::qt_getEnumName(Qt::Alignment) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::ApplicationAttribute) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::ApplicationState) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::ArrowType) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::AspectRatioMode) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::Axis) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::BGMode) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::BrushStyle) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::CaseSensitivity) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::CheckState) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::ChecksumType) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::ClipOperation) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::ConnectionType) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::ContextMenuPolicy) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::Corner) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::CursorMoveStyle) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::CursorShape) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::DateFormat) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::DayOfWeek) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::DockWidgetArea) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::DockWidgetAreas) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::DropAction) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::DropActions) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::Edge) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::Edges) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::EnterKeyType) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::FillRule) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::FocusPolicy) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::FocusReason) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::GestureState) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::GestureType) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::GlobalColor) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::HighDpiScaleFactorRoundingPolicy) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::ImageConversionFlags) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::InputMethodHint) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::InputMethodHints) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::InputMethodQueries) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::InputMethodQuery) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::ItemDataRole) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::ItemFlags) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::ItemSelectionMode) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::ItemSelectionOperation) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::Key) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::KeyboardModifiers) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::LayoutDirection) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::MaskMode) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::MatchFlags) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::MouseButtons) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::MouseEventFlag) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::MouseEventSource) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::NativeGestureType) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::Orientation) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::Orientations) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::PenCapStyle) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::PenJoinStyle) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::PenStyle) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::ScreenOrientation) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::ScreenOrientations) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::ScrollBarPolicy) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::ScrollPhase) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::ShortcutContext) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::SizeHint) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::SizeMode) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::SortOrder) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::SplitBehavior) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::TabFocusBehavior) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::TextElideMode) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::TextFlag) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::TextFormat) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::TextInteractionFlag) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::TextInteractionFlags) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::TimeSpec) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::TimerType) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::ToolBarArea) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::ToolBarAreas) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::ToolButtonStyle) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::TouchPointStates) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::TransformationMode) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::WidgetAttribute) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::WindowFlags) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::WindowModality) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::WindowState) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::WindowStates) matches class "^Qt$" and "^qt_getEnumName$"
 - const char* Qt::qt_getEnumName(Qt::WindowType) matches class "^Qt$" and "^qt_getEnumName$"
 - int QList::count_impl(const T&,QListData::ArrayCompatibleLayout) matches class "^.*$" and "QListData::ArrayCompatibleLayout" matches "^QListData\:\:ArrayCompatibleLayout$"
 - int QList::count_impl(const T&,QListData::NotArrayCompatibleLayout) matches class "^.*$" and "QListData::NotArrayCompatibleLayout" matches "^QListData\:\:NotArrayCompatibleLayout$"
 - int QMetaObject::metacall(QObject*,QMetaObject::Call,int,void**) matches class "^QMetaObject$" and "^metacall$"
 - int QMetaObject::static_metacall(QMetaObject::Call,int,void**) matches class "^QMetaObject$" and "^static_metacall$"
 - int QObject::startTimer(std::chrono::milliseconds,Qt::TimerType) matches class "^.*$" and "std::chrono::milliseconds" matches "^std\:\:chrono\:\:milliseconds$"
 - int QStateMachine::postDelayedEvent(QEvent*,std::chrono::milliseconds) matches class "^.*$" and "std::chrono::milliseconds" matches "^std\:\:chrono\:\:milliseconds$"
 - void QAbstractAnimation::QAbstractAnimation(QAbstractAnimationPrivate&,QObject*) matches class "^.*$" and "QAbstractAnimationPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QAbstractButton::QAbstractButton(QAbstractButtonPrivate&,QWidget*) matches class "^.*$" and "QAbstractButtonPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QAbstractEventDispatcher::QAbstractEventDispatcher(QAbstractEventDispatcherPrivate&,QObject*) matches class "^.*$" and "QAbstractEventDispatcherPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QAbstractGraphicsShapeItem::QAbstractGraphicsShapeItem(QAbstractGraphicsShapeItemPrivate&,QGraphicsItem*) matches class "^.*$" and "QAbstractGraphicsShapeItemPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QAbstractItemDelegate::QAbstractItemDelegate(QObjectPrivate&,QObject*) matches class "^.*$" and "QObjectPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QAbstractItemModel::QAbstractItemModel(QAbstractItemModelPrivate&,QObject*) matches class "^.*$" and "QAbstractItemModelPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QAbstractItemModel::columnsAboutToBeInserted(const QModelIndex&,int,int,QAbstractItemModel::QPrivateSignal) matches class "^.*$" and "QAbstractItemModel::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QAbstractItemModel::columnsAboutToBeMoved(const QModelIndex&,int,int,const QModelIndex&,int,QAbstractItemModel::QPrivateSignal) matches class "^.*$" and "QAbstractItemModel::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QAbstractItemModel::columnsAboutToBeRemoved(const QModelIndex&,int,int,QAbstractItemModel::QPrivateSignal) matches class "^.*$" and "QAbstractItemModel::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QAbstractItemModel::columnsInserted(const QModelIndex&,int,int,QAbstractItemModel::QPrivateSignal) matches class "^.*$" and "QAbstractItemModel::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QAbstractItemModel::columnsMoved(const QModelIndex&,int,int,const QModelIndex&,int,QAbstractItemModel::QPrivateSignal) matches class "^.*$" and "QAbstractItemModel::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QAbstractItemModel::columnsRemoved(const QModelIndex&,int,int,QAbstractItemModel::QPrivateSignal) matches class "^.*$" and "QAbstractItemModel::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QAbstractItemModel::modelAboutToBeReset(QAbstractItemModel::QPrivateSignal) matches class "^.*$" and "QAbstractItemModel::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QAbstractItemModel::modelReset(QAbstractItemModel::QPrivateSignal) matches class "^.*$" and "QAbstractItemModel::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QAbstractItemModel::rowsAboutToBeInserted(const QModelIndex&,int,int,QAbstractItemModel::QPrivateSignal) matches class "^.*$" and "QAbstractItemModel::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QAbstractItemModel::rowsAboutToBeMoved(const QModelIndex&,int,int,const QModelIndex&,int,QAbstractItemModel::QPrivateSignal) matches class "^.*$" and "QAbstractItemModel::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QAbstractItemModel::rowsAboutToBeRemoved(const QModelIndex&,int,int,QAbstractItemModel::QPrivateSignal) matches class "^.*$" and "QAbstractItemModel::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QAbstractItemModel::rowsInserted(const QModelIndex&,int,int,QAbstractItemModel::QPrivateSignal) matches class "^.*$" and "QAbstractItemModel::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QAbstractItemModel::rowsMoved(const QModelIndex&,int,int,const QModelIndex&,int,QAbstractItemModel::QPrivateSignal) matches class "^.*$" and "QAbstractItemModel::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QAbstractItemModel::rowsRemoved(const QModelIndex&,int,int,QAbstractItemModel::QPrivateSignal) matches class "^.*$" and "QAbstractItemModel::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QAbstractItemView::QAbstractItemView(QAbstractItemViewPrivate&,QWidget*) matches class "^.*$" and "QAbstractItemViewPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QAbstractListModel::QAbstractListModel(QAbstractItemModelPrivate&,QObject*) matches class "^.*$" and "QAbstractItemModelPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QAbstractProxyModel::QAbstractProxyModel(QAbstractProxyModelPrivate&,QObject*) matches class "^.*$" and "QAbstractProxyModelPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QAbstractProxyModel::sourceModelChanged(QAbstractProxyModel::QPrivateSignal) matches class "^.*$" and "QAbstractProxyModel::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QAbstractScrollArea::QAbstractScrollArea(QAbstractScrollAreaPrivate&,QWidget*) matches class "^.*$" and "QAbstractScrollAreaPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QAbstractSlider::QAbstractSlider(QAbstractSliderPrivate&,QWidget*) matches class "^.*$" and "QAbstractSliderPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QAbstractSpinBox::QAbstractSpinBox(QAbstractSpinBoxPrivate&,QWidget*) matches class "^.*$" and "QAbstractSpinBoxPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QAbstractState::QAbstractState(QAbstractStatePrivate&,QState*) matches class "^.*$" and "QAbstractStatePrivate&" matches "^Q\w+Private( const)?\&$"
 - void QAbstractState::entered(QAbstractState::QPrivateSignal) matches class "^.*$" and "QAbstractState::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QAbstractState::exited(QAbstractState::QPrivateSignal) matches class "^.*$" and "QAbstractState::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QAbstractTableModel::QAbstractTableModel(QAbstractItemModelPrivate&,QObject*) matches class "^.*$" and "QAbstractItemModelPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QAbstractTextDocumentLayout::QAbstractTextDocumentLayout(QAbstractTextDocumentLayoutPrivate&,QTextDocument*) matches class "^.*$" and "QAbstractTextDocumentLayoutPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QAbstractTransition::QAbstractTransition(QAbstractTransitionPrivate&,QState*) matches class "^.*$" and "QAbstractTransitionPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QAbstractTransition::targetStateChanged(QAbstractTransition::QPrivateSignal) matches class "^.*$" and "QAbstractTransition::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QAbstractTransition::targetStatesChanged(QAbstractTransition::QPrivateSignal) matches class "^.*$" and "QAbstractTransition::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QAbstractTransition::triggered(QAbstractTransition::QPrivateSignal) matches class "^.*$" and "QAbstractTransition::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QAction::QAction(QActionPrivate&,QObject*) matches class "^.*$" and "QActionPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QAnimationGroup::QAnimationGroup(QAnimationGroupPrivate&,QObject*) matches class "^.*$" and "QAnimationGroupPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QBitArray::detach() matches class "^.*$" and "^detach$"
 - void QBrush::cleanUp(QBrushData*) matches class "^QBrush$" and "^cleanUp$"
 - void QBrush::detach(Qt::BrushStyle) matches class "^.*$" and "^detach$"
 - void QByteArray::QByteArray(QByteArrayDataPtr) matches class "^.*$" and "QByteArrayDataPtr" matches "^QByteArrayDataPtr$"
 - void QByteArray::QByteArray(int,Qt::Initialization) matches class "^.*$" and "Qt::Initialization" matches "^Qt\:\:Initialization$"
 - void QByteArray::detach() matches class "^.*$" and "^detach$"
 - void QCalendar::QCalendar(QLatin1String) matches class "^.*$" and "QLatin1String" matches "^QLatin1String$"
 - void QCborArray::QCborArray(QCborContainerPrivate&) matches class "^.*$" and "QCborContainerPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QCborArray::QCborArray(std::initializer_list<QCborValue>) matches class "^.*$" and "std::initializer_list<QCborValue>" matches "^std::initializer_list<.*$"
 - void QCborArray::detach(qsizetype) matches class "^.*$" and "^detach$"
 - void QCborMap::QCborMap(QCborContainerPrivate&) matches class "^.*$" and "QCborContainerPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QCborMap::QCborMap(std::initializer_list<QCborMap::value_type>) matches class "^.*$" and "std::initializer_list<QCborMap::value_type>" matches "^std::initializer_list<.*$"
 - void QCborMap::detach(qsizetype) matches class "^.*$" and "^detach$"
 - void QCborMap::remove(QLatin1String) matches class "^.*$" and "QLatin1String" matches "^QLatin1String$"
 - void QCborStreamWriter::append(QLatin1String) matches class "^.*$" and "QLatin1String" matches "^QLatin1String$"
 - void QCborStreamWriter::append(qfloat16) matches class "^.*$" and "qfloat16" matches "^qfloat16&?$"
 - void QCborStreamWriter::append(std::nullptr_t) matches class "^.*$" and "std::nullptr_t" matches "^std::nullptr_t&?$"
 - void QCborValue::QCborValue(QLatin1String) matches class "^.*$" and "QLatin1String" matches "^QLatin1String$"
 - void QCborValue::QCborValue(std::nullptr_t) matches class "^.*$" and "std::nullptr_t" matches "^std::nullptr_t&?$"
 - void QCollator::detach() matches class "^.*$" and "^detach$"
 - void QCollatorSortKey::QCollatorSortKey(QCollatorSortKeyPrivate*) matches class "^.*$" and "QCollatorSortKeyPrivate*" matches "^Q[^H]\w+Private( const)?\*$"
 - void QColor::QColor(QLatin1String) matches class "^.*$" and "QLatin1String" matches "^QLatin1String$"
 - void QColor::setNamedColor(QLatin1String) matches class "^.*$" and "QLatin1String" matches "^QLatin1String$"
 - void QColumnView::QColumnView(QColumnViewPrivate&,QWidget*) matches class "^.*$" and "QColumnViewPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QComboBox::QComboBox(QComboBoxPrivate&,QWidget*) matches class "^.*$" and "QComboBoxPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QCommonStyle::QCommonStyle(QCommonStylePrivate&) matches class "^.*$" and "QCommonStylePrivate&" matches "^Q\w+Private( const)?\&$"
 - void QCoreApplication::QCoreApplication(QCoreApplicationPrivate&) matches class "^.*$" and "QCoreApplicationPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QCoreApplication::aboutToQuit(QCoreApplication::QPrivateSignal) matches class "^.*$" and "QCoreApplication::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QDialog::QDialog(QDialogPrivate&,QWidget*,Qt::WindowFlags) matches class "^.*$" and "QDialogPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QDir::QDir(QDirPrivate&) matches class "^.*$" and "QDirPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QDirModel::QDirModel(QDirModelPrivate&,QObject*) matches class "^.*$" and "QDirModelPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QEasingCurve::setCustomType(QEasingCurve::EasingFunction) matches class "^QEasingCurve$" and "^setCustomType$"
 - void QEventTransition::QEventTransition(QEventTransitionPrivate&,QObject*,QEvent::Type,QState*) matches class "^.*$" and "QEventTransitionPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QEventTransition::QEventTransition(QEventTransitionPrivate&,QState*) matches class "^.*$" and "QEventTransitionPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QFile::QFile(QFilePrivate&,QObject*) matches class "^.*$" and "QFilePrivate&" matches "^Q\w+Private( const)?\&$"
 - void QFileDevice::QFileDevice(QFileDevicePrivate&,QObject*) matches class "^.*$" and "QFileDevicePrivate&" matches "^Q\w+Private( const)?\&$"
 - void QFileInfo::QFileInfo(QFileInfoPrivate*) matches class "^.*$" and "QFileInfoPrivate*" matches "^Q[^H]\w+Private( const)?\*$"
 - void QFileSystemModel::QFileSystemModel(QFileSystemModelPrivate&,QObject*) matches class "^.*$" and "QFileSystemModelPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QFileSystemWatcher::directoryChanged(const QString&,QFileSystemWatcher::QPrivateSignal) matches class "^.*$" and "QFileSystemWatcher::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QFileSystemWatcher::fileChanged(const QString&,QFileSystemWatcher::QPrivateSignal) matches class "^.*$" and "QFileSystemWatcher::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QFinalState::QFinalState(QFinalStatePrivate&,QState*) matches class "^.*$" and "QFinalStatePrivate&" matches "^Q\w+Private( const)?\&$"
 - void QFont::QFont(QFontPrivate*) matches class "^.*$" and "QFontPrivate*" matches "^Q[^H]\w+Private( const)?\*$"
 - void QFont::detach() matches class "^.*$" and "^detach$"
 - void QFrame::QFrame(QFramePrivate&,QWidget*,Qt::WindowFlags) matches class "^.*$" and "QFramePrivate&" matches "^Q\w+Private( const)?\&$"
 - void QGenericMatrix::QGenericMatrix<N, M, T>(Qt::Initialization) matches class "^.*$" and "Qt::Initialization" matches "^Qt\:\:Initialization$"
 - void QGesture::QGesture(QGesturePrivate&,QObject*) matches class "^.*$" and "QGesturePrivate&" matches "^Q\w+Private( const)?\&$"
 - void QGraphicsEffect::QGraphicsEffect(QGraphicsEffectPrivate&,QObject*) matches class "^.*$" and "QGraphicsEffectPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QGraphicsItem::QGraphicsItem(QGraphicsItemPrivate&,QGraphicsItem*) matches class "^.*$" and "QGraphicsItemPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QGraphicsLayout::QGraphicsLayout(QGraphicsLayoutPrivate&,QGraphicsLayoutItem*) matches class "^.*$" and "QGraphicsLayoutPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QGraphicsLayoutItem::QGraphicsLayoutItem(QGraphicsLayoutItemPrivate&) matches class "^.*$" and "QGraphicsLayoutItemPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QGraphicsObject::QGraphicsObject(QGraphicsItemPrivate&,QGraphicsItem*) matches class "^.*$" and "QGraphicsItemPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QGraphicsSceneEvent::QGraphicsSceneEvent(QGraphicsSceneEventPrivate&,QEvent::Type) matches class "^.*$" and "QGraphicsSceneEventPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QGraphicsTransform::QGraphicsTransform(QGraphicsTransformPrivate&,QObject*) matches class "^.*$" and "QGraphicsTransformPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QGraphicsView::QGraphicsView(QGraphicsViewPrivate&,QWidget*) matches class "^.*$" and "QGraphicsViewPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QGraphicsWidget::QGraphicsWidget(QGraphicsWidgetPrivate&,QGraphicsItem*,Qt::WindowFlags) matches class "^.*$" and "QGraphicsWidgetPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QGuiApplication::QGuiApplication(QGuiApplicationPrivate&) matches class "^.*$" and "QGuiApplicationPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QHash::QHash<K, V>(std::initializer_list<std::pair<Key, T> >) matches class "^.*$" and "std::initializer_list<std::pair<Key, T> >" matches "^std::initializer_list<.*$"
 - void QHash::deleteNode2(QHashData::Node*) matches class "^.*$" and "QHashData::Node*" matches "^QHashData\:\:Node\*$"
 - void QHash::detach() matches class "^.*$" and "^detach$"
 - void QHash::duplicateNode(QHashData::Node*,void*) matches class "^.*$" and "QHashData::Node*" matches "^QHashData\:\:Node\*$"
 - void QHeaderView::QHeaderView(QHeaderViewPrivate&,Qt::Orientation,QWidget*) matches class "^.*$" and "QHeaderViewPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QHistoryState::defaultStateChanged(QHistoryState::QPrivateSignal) matches class "^.*$" and "QHistoryState::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QHistoryState::defaultTransitionChanged(QHistoryState::QPrivateSignal) matches class "^.*$" and "QHistoryState::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QHistoryState::historyTypeChanged(QHistoryState::QPrivateSignal) matches class "^.*$" and "QHistoryState::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QIODevice::QIODevice(QIODevicePrivate&,QObject*) matches class "^.*$" and "QIODevicePrivate&" matches "^Q\w+Private( const)?\&$"
 - void QIcon::detach() matches class "^.*$" and "^detach$"
 - void QIdentityProxyModel::QIdentityProxyModel(QIdentityProxyModelPrivate&,QObject*) matches class "^.*$" and "QIdentityProxyModelPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QImage::detach() matches class "^.*$" and "^detach$"
 - void QImageIOHandler::QImageIOHandler(QImageIOHandlerPrivate&) matches class "^.*$" and "QImageIOHandlerPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QItemSelectionModel::QItemSelectionModel(QItemSelectionModelPrivate&,QAbstractItemModel*) matches class "^.*$" and "QItemSelectionModelPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QJsonArray::QJsonArray(QCborContainerPrivate*) matches class "^.*$" and "QCborContainerPrivate*" matches "^Q[^H]\w+Private( const)?\*$"
 - void QJsonArray::QJsonArray(std::initializer_list<QJsonValue>) matches class "^.*$" and "std::initializer_list<QJsonValue>" matches "^std::initializer_list<.*$"
 - void QJsonArray::detach(uint) matches class "^.*$" and "^detach$"
 - void QJsonValue::QJsonValue(QLatin1String) matches class "^.*$" and "QLatin1String" matches "^QLatin1String$"
 - void QJsonValue::detach() matches class "^.*$" and "^detach$"
 - void QKeySequenceEdit::QKeySequenceEdit(QKeySequenceEditPrivate&,QWidget*,Qt::WindowFlags) matches class "^.*$" and "QKeySequenceEditPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QLayout::QLayout(QLayoutPrivate&,QLayout*,QWidget*) matches class "^.*$" and "QLayoutPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QLinkedList::QLinkedList<T>(std::initializer_list<T>) matches class "^.*$" and "std::initializer_list<T>" matches "^std::initializer_list<.*$"
 - void QLinkedList::detach() matches class "^.*$" and "^detach$"
 - void QLinkedList::freeData(QLinkedListData*) matches class "^.*$" and "QLinkedListData*" matches "^QLinkedListData\*$"
 - void QList::QList<T>(std::initializer_list<T>) matches class "^.*$" and "std::initializer_list<T>" matches "^std::initializer_list<.*$"
 - void QList::dealloc(QListData::Data*) matches class "^.*$" and "QListData::Data*" matches "^QListData\:\:Data\*$"
 - void QList::detach() matches class "^.*$" and "^detach$"
 - void QList::node_construct(QList::Node*,const T&) matches class "^.*$" and "QList::Node*" matches "^QList\:\:Node\*$"
 - void QList::node_copy(QList::Node*,QList::Node*,QList::Node*) matches class "^.*$" and "QList::Node*" matches "^QList\:\:Node\*$"
 - void QList::node_destruct(QList::Node*) matches class "^.*$" and "QList::Node*" matches "^QList\:\:Node\*$"
 - void QList::node_destruct(QList::Node*,QList::Node*) matches class "^.*$" and "QList::Node*" matches "^QList\:\:Node\*$"
 - void QListView::QListView(QListViewPrivate&,QWidget*) matches class "^.*$" and "QListViewPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QLocale::QLocale(QLocalePrivate&) matches class "^.*$" and "QLocalePrivate&" matches "^Q\w+Private( const)?\&$"
 - void QMap::QMap<K, V>(std::initializer_list<std::pair<Key, T> >) matches class "^.*$" and "std::initializer_list<std::pair<Key, T> >" matches "^std::initializer_list<.*$"
 - void QMap::detach() matches class "^.*$" and "^detach$"
 - void QMatrix4x4::QMatrix4x4(Qt::Initialization) matches class "^.*$" and "Qt::Initialization" matches "^Qt\:\:Initialization$"
 - void QMatrix::QMatrix(Qt::Initialization) matches class "^.*$" and "Qt::Initialization" matches "^Qt\:\:Initialization$"
 - void QMenu::QMenu(QMenuPrivate&,QWidget*) matches class "^.*$" and "QMenuPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QMenu::setPlatformMenu(QPlatformMenu*) matches class "^Q.*$" and "QPlatformMenu*" matches "^QPlatform.*$"
 - void QMetaObject::activate(QObject*,const QMetaObject*,int,void**) matches class "^QMetaObject$" and "^activate$"
 - void QMetaObject::activate(QObject*,int,int,void**) matches class "^QMetaObject$" and "^activate$"
 - void QMetaObject::activate(QObject*,int,void**) matches class "^QMetaObject$" and "^activate$"
 - void QMultiMap::QMultiMap<K, V>(std::initializer_list<std::pair<Key, T> >) matches class "^.*$" and "std::initializer_list<std::pair<Key, T> >" matches "^std::initializer_list<.*$"
 - void QObject::QObject(QObjectPrivate&,QObject*) matches class "^.*$" and "QObjectPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QObject::objectNameChanged(const QString&,QObject::QPrivateSignal) matches class "^.*$" and "QObject::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QObject::setUserData(uint,QObjectUserData*) matches class "^.*$" and "QObjectUserData*" matches "^QObjectUserData\*$"
 - void QOpenGLContext::qt_static_metacall(QObject*,QMetaObject::Call,int,void**) matches class "^QOpenGL.*$" and "void**" matches "^(const )?void ?\*\*$"
 - void QOpenGLContext::setTextureFunctions(QOpenGLTextureHelper*) matches class "^QOpenGL.*$" and "QOpenGLTextureHelper*" matches "^QOpenGLTextureHelper\*$"
 - void QOpenGLContextGroup::qt_static_metacall(QObject*,QMetaObject::Call,int,void**) matches class "^QOpenGL.*$" and "void**" matches "^(const )?void ?\*\*$"
 - void QOpenGLDebugLogger::qt_static_metacall(QObject*,QMetaObject::Call,int,void**) matches class "^QOpenGL.*$" and "void**" matches "^(const )?void ?\*\*$"
 - void QOpenGLExtraFunctions::glBindBufferRange(GLenum,GLuint,GLuint,GLintptr,GLsizeiptr) matches class "^QOpenGL.*$" and "GLintptr" matches "^GLintptr$"
 - void QOpenGLExtraFunctions::glBindVertexBuffer(GLuint,GLuint,GLintptr,GLsizei) matches class "^QOpenGL.*$" and "GLintptr" matches "^GLintptr$"
 - void QOpenGLExtraFunctions::glCopyBufferSubData(GLenum,GLenum,GLintptr,GLintptr,GLsizeiptr) matches class "^QOpenGL.*$" and "GLintptr" matches "^GLintptr$"
 - void QOpenGLExtraFunctions::glDeleteSync(GLsync) matches class "^QOpenGL.*$" and "GLsync" matches "^GLsync$"
 - void QOpenGLExtraFunctions::glDispatchComputeIndirect(GLintptr) matches class "^QOpenGL.*$" and "GLintptr" matches "^GLintptr$"
 - void QOpenGLExtraFunctions::glFlushMappedBufferRange(GLenum,GLintptr,GLsizeiptr) matches class "^QOpenGL.*$" and "GLintptr" matches "^GLintptr$"
 - void QOpenGLExtraFunctions::glGetActiveUniformBlockName(GLuint,GLuint,GLsizei,GLsizei*,GLchar*) matches class "^QOpenGL.*$" and "GLchar*" matches "^GLchar\*$"
 - void QOpenGLExtraFunctions::glGetBooleani_v(GLenum,GLuint,GLboolean*) matches class "^QOpenGL.*$" and "GLboolean*" matches "^(const )?GLboolean ?\*$"
 - void QOpenGLExtraFunctions::glGetBufferPointerv(GLenum,GLenum,void**) matches class "^QOpenGL.*$" and "void**" matches "^(const )?void ?\*\*$"
 - void QOpenGLExtraFunctions::glGetObjectLabel(GLenum,GLuint,GLsizei,GLsizei*,GLchar*) matches class "^QOpenGL.*$" and "GLchar*" matches "^GLchar\*$"
 - void QOpenGLExtraFunctions::glGetObjectPtrLabel(const void*,GLsizei,GLsizei*,GLchar*) matches class "^QOpenGL.*$" and "GLchar*" matches "^GLchar\*$"
 - void QOpenGLExtraFunctions::glGetPointerv(GLenum,void**) matches class "^QOpenGL.*$" and "void**" matches "^(const )?void ?\*\*$"
 - void QOpenGLExtraFunctions::glGetProgramPipelineInfoLog(GLuint,GLsizei,GLsizei*,GLchar*) matches class "^QOpenGL.*$" and "GLchar*" matches "^GLchar\*$"
 - void QOpenGLExtraFunctions::glGetProgramResourceName(GLuint,GLenum,GLuint,GLsizei,GLsizei*,GLchar*) matches class "^QOpenGL.*$" and "GLchar*" matches "^GLchar\*$"
 - void QOpenGLExtraFunctions::glGetSynciv(GLsync,GLenum,GLsizei,GLsizei*,GLint*) matches class "^QOpenGL.*$" and "GLsync" matches "^GLsync$"
 - void QOpenGLExtraFunctions::glGetTransformFeedbackVarying(GLuint,GLuint,GLsizei,GLsizei*,GLsizei*,GLenum*,GLchar*) matches class "^QOpenGL.*$" and "GLchar*" matches "^GLchar\*$"
 - void QOpenGLExtraFunctions::glGetUniformIndices(GLuint,GLsizei,const GLchar*const*,GLuint*) matches class "^QOpenGL.*$" and "const GLchar*const*" matches "^(const )?GLchar ?\*(const)?\*$"
 - void QOpenGLExtraFunctions::glTexBufferRange(GLenum,GLenum,GLuint,GLintptr,GLsizeiptr) matches class "^QOpenGL.*$" and "GLintptr" matches "^GLintptr$"
 - void QOpenGLExtraFunctions::glTransformFeedbackVaryings(GLuint,GLsizei,const GLchar*const*,GLenum) matches class "^QOpenGL.*$" and "const GLchar*const*" matches "^(const )?GLchar ?\*(const)?\*$"
 - void QOpenGLExtraFunctions::glWaitSync(GLsync,GLbitfield,GLuint64) matches class "^QOpenGL.*$" and "GLsync" matches "^GLsync$"
 - void QOpenGLFramebufferObjectFormat::detach() matches class "^.*$" and "^detach$"
 - void QOpenGLFunctions::glBufferData(GLenum,qopengl_GLsizeiptr,const void*,GLenum) matches class "^QOpenGL.*$" and "qopengl_GLsizeiptr" matches "^qopengl_GLsizeiptr$"
 - void QOpenGLFunctions::glBufferSubData(GLenum,qopengl_GLintptr,qopengl_GLsizeiptr,const void*) matches class "^QOpenGL.*$" and "qopengl_GLintptr" matches "^qopengl_GLintptr$"
 - void QOpenGLFunctions::glGetActiveAttrib(GLuint,GLuint,GLsizei,GLsizei*,GLint*,GLenum*,char*) matches class "^QOpenGL.*$" and "char*" matches "^char\*$"
 - void QOpenGLFunctions::glGetActiveUniform(GLuint,GLuint,GLsizei,GLsizei*,GLint*,GLenum*,char*) matches class "^QOpenGL.*$" and "char*" matches "^char\*$"
 - void QOpenGLFunctions::glGetBooleanv(GLenum,GLboolean*) matches class "^QOpenGL.*$" and "GLboolean*" matches "^(const )?GLboolean ?\*$"
 - void QOpenGLFunctions::glGetProgramInfoLog(GLuint,GLsizei,GLsizei*,char*) matches class "^QOpenGL.*$" and "char*" matches "^char\*$"
 - void QOpenGLFunctions::glGetShaderInfoLog(GLuint,GLsizei,GLsizei*,char*) matches class "^QOpenGL.*$" and "char*" matches "^char\*$"
 - void QOpenGLFunctions::glGetShaderSource(GLuint,GLsizei,GLsizei*,char*) matches class "^QOpenGL.*$" and "char*" matches "^char\*$"
 - void QOpenGLFunctions::glGetVertexAttribPointerv(GLuint,GLenum,void**) matches class "^QOpenGL.*$" and "void**" matches "^(const )?void ?\*\*$"
 - void QOpenGLFunctions::glShaderSource(GLuint,GLsizei,const char**,const GLint*) matches class "^QOpenGL.*$" and "const char**" matches "^(const )?char ?\*\*$"
 - void QOpenGLShader::qt_static_metacall(QObject*,QMetaObject::Call,int,void**) matches class "^QOpenGL.*$" and "void**" matches "^(const )?void ?\*\*$"
 - void QOpenGLShaderProgram::qt_static_metacall(QObject*,QMetaObject::Call,int,void**) matches class "^QOpenGL.*$" and "void**" matches "^(const )?void ?\*\*$"
 - void QOpenGLShaderProgram::setAttributeArray(const char*,const QVector2D*,int) matches class "^QOpenGL.*$" and "const QVector2D*" matches "^(const )?QVector.D ?\*$"
 - void QOpenGLShaderProgram::setAttributeArray(const char*,const QVector3D*,int) matches class "^QOpenGL.*$" and "const QVector3D*" matches "^(const )?QVector.D ?\*$"
 - void QOpenGLShaderProgram::setAttributeArray(const char*,const QVector4D*,int) matches class "^QOpenGL.*$" and "const QVector4D*" matches "^(const )?QVector.D ?\*$"
 - void QOpenGLShaderProgram::setAttributeArray(int,const QVector2D*,int) matches class "^QOpenGL.*$" and "const QVector2D*" matches "^(const )?QVector.D ?\*$"
 - void QOpenGLShaderProgram::setAttributeArray(int,const QVector3D*,int) matches class "^QOpenGL.*$" and "const QVector3D*" matches "^(const )?QVector.D ?\*$"
 - void QOpenGLShaderProgram::setAttributeArray(int,const QVector4D*,int) matches class "^QOpenGL.*$" and "const QVector4D*" matches "^(const )?QVector.D ?\*$"
 - void QOpenGLShaderProgram::setUniformValueArray(const char*,const QMatrix2x2*,int) matches class "^QOpenGL.*$" and "const QMatrix2x2*" matches "^(const )?QMatrix.x. ?\*$"
 - void QOpenGLShaderProgram::setUniformValueArray(const char*,const QMatrix2x3*,int) matches class "^QOpenGL.*$" and "const QMatrix2x3*" matches "^(const )?QMatrix.x. ?\*$"
 - void QOpenGLShaderProgram::setUniformValueArray(const char*,const QMatrix2x4*,int) matches class "^QOpenGL.*$" and "const QMatrix2x4*" matches "^(const )?QMatrix.x. ?\*$"
 - void QOpenGLShaderProgram::setUniformValueArray(const char*,const QMatrix3x2*,int) matches class "^QOpenGL.*$" and "const QMatrix3x2*" matches "^(const )?QMatrix.x. ?\*$"
 - void QOpenGLShaderProgram::setUniformValueArray(const char*,const QMatrix3x3*,int) matches class "^QOpenGL.*$" and "const QMatrix3x3*" matches "^(const )?QMatrix.x. ?\*$"
 - void QOpenGLShaderProgram::setUniformValueArray(const char*,const QMatrix3x4*,int) matches class "^QOpenGL.*$" and "const QMatrix3x4*" matches "^(const )?QMatrix.x. ?\*$"
 - void QOpenGLShaderProgram::setUniformValueArray(const char*,const QMatrix4x2*,int) matches class "^QOpenGL.*$" and "const QMatrix4x2*" matches "^(const )?QMatrix.x. ?\*$"
 - void QOpenGLShaderProgram::setUniformValueArray(const char*,const QMatrix4x3*,int) matches class "^QOpenGL.*$" and "const QMatrix4x3*" matches "^(const )?QMatrix.x. ?\*$"
 - void QOpenGLShaderProgram::setUniformValueArray(const char*,const QMatrix4x4*,int) matches class "^QOpenGL.*$" and "const QMatrix4x4*" matches "^(const )?QMatrix.x. ?\*$"
 - void QOpenGLShaderProgram::setUniformValueArray(const char*,const QVector2D*,int) matches class "^QOpenGL.*$" and "const QVector2D*" matches "^(const )?QVector.D ?\*$"
 - void QOpenGLShaderProgram::setUniformValueArray(const char*,const QVector3D*,int) matches class "^QOpenGL.*$" and "const QVector3D*" matches "^(const )?QVector.D ?\*$"
 - void QOpenGLShaderProgram::setUniformValueArray(const char*,const QVector4D*,int) matches class "^QOpenGL.*$" and "const QVector4D*" matches "^(const )?QVector.D ?\*$"
 - void QOpenGLShaderProgram::setUniformValueArray(int,const QMatrix2x2*,int) matches class "^QOpenGL.*$" and "const QMatrix2x2*" matches "^(const )?QMatrix.x. ?\*$"
 - void QOpenGLShaderProgram::setUniformValueArray(int,const QMatrix2x3*,int) matches class "^QOpenGL.*$" and "const QMatrix2x3*" matches "^(const )?QMatrix.x. ?\*$"
 - void QOpenGLShaderProgram::setUniformValueArray(int,const QMatrix2x4*,int) matches class "^QOpenGL.*$" and "const QMatrix2x4*" matches "^(const )?QMatrix.x. ?\*$"
 - void QOpenGLShaderProgram::setUniformValueArray(int,const QMatrix3x2*,int) matches class "^QOpenGL.*$" and "const QMatrix3x2*" matches "^(const )?QMatrix.x. ?\*$"
 - void QOpenGLShaderProgram::setUniformValueArray(int,const QMatrix3x3*,int) matches class "^QOpenGL.*$" and "const QMatrix3x3*" matches "^(const )?QMatrix.x. ?\*$"
 - void QOpenGLShaderProgram::setUniformValueArray(int,const QMatrix3x4*,int) matches class "^QOpenGL.*$" and "const QMatrix3x4*" matches "^(const )?QMatrix.x. ?\*$"
 - void QOpenGLShaderProgram::setUniformValueArray(int,const QMatrix4x2*,int) matches class "^QOpenGL.*$" and "const QMatrix4x2*" matches "^(const )?QMatrix.x. ?\*$"
 - void QOpenGLShaderProgram::setUniformValueArray(int,const QMatrix4x3*,int) matches class "^QOpenGL.*$" and "const QMatrix4x3*" matches "^(const )?QMatrix.x. ?\*$"
 - void QOpenGLShaderProgram::setUniformValueArray(int,const QMatrix4x4*,int) matches class "^QOpenGL.*$" and "const QMatrix4x4*" matches "^(const )?QMatrix.x. ?\*$"
 - void QOpenGLShaderProgram::setUniformValueArray(int,const QVector2D*,int) matches class "^QOpenGL.*$" and "const QVector2D*" matches "^(const )?QVector.D ?\*$"
 - void QOpenGLShaderProgram::setUniformValueArray(int,const QVector3D*,int) matches class "^QOpenGL.*$" and "const QVector3D*" matches "^(const )?QVector.D ?\*$"
 - void QOpenGLShaderProgram::setUniformValueArray(int,const QVector4D*,int) matches class "^QOpenGL.*$" and "const QVector4D*" matches "^(const )?QVector.D ?\*$"
 - void QOpenGLTexture::qt_static_metacall(QObject*,QMetaObject::Call,int,void**) matches class "^QOpenGL.*$" and "void**" matches "^(const )?void ?\*\*$"
 - void QOpenGLTimeMonitor::qt_static_metacall(QObject*,QMetaObject::Call,int,void**) matches class "^QOpenGL.*$" and "void**" matches "^(const )?void ?\*\*$"
 - void QOpenGLTimerQuery::qt_static_metacall(QObject*,QMetaObject::Call,int,void**) matches class "^QOpenGL.*$" and "void**" matches "^(const )?void ?\*\*$"
 - void QOpenGLVertexArrayObject::QOpenGLVertexArrayObject(QOpenGLVertexArrayObjectPrivate&) matches class "^.*$" and "QOpenGLVertexArrayObjectPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QOpenGLVertexArrayObject::qt_static_metacall(QObject*,QMetaObject::Call,int,void**) matches class "^QOpenGL.*$" and "void**" matches "^(const )?void ?\*\*$"
 - void QOpenGLWidget::qt_static_metacall(QObject*,QMetaObject::Call,int,void**) matches class "^QOpenGL.*$" and "void**" matches "^(const )?void ?\*\*$"
 - void QOpenGLWindow::qt_static_metacall(QObject*,QMetaObject::Call,int,void**) matches class "^QOpenGL.*$" and "void**" matches "^(const )?void ?\*\*$"
 - void QPageSize::QPageSize(QPageSizePrivate&) matches class "^.*$" and "QPageSizePrivate&" matches "^Q\w+Private( const)?\&$"
 - void QPagedPaintDevice::QPagedPaintDevice(QPagedPaintDevicePrivate*) matches class "^.*$" and "QPagedPaintDevicePrivate*" matches "^Q[^H]\w+Private( const)?\*$"
 - void QPaintDeviceWindow::QPaintDeviceWindow(QPaintDeviceWindowPrivate&,QWindow*) matches class "^.*$" and "QPaintDeviceWindowPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QPaintEngine::QPaintEngine(QPaintEnginePrivate&,QPaintEngine::PaintEngineFeatures) matches class "^.*$" and "QPaintEnginePrivate&" matches "^Q\w+Private( const)?\&$"
 - void QPaintEngine::fix_neg_rect(int*,int*,int*,int*) matches class "^QPaintEngine$" and "^fix_neg_rect$"
 - void QPainterPath::detach() matches class "^.*$" and "^detach$"
 - void QPalette::detach() matches class "^.*$" and "^detach$"
 - void QParallelAnimationGroup::QParallelAnimationGroup(QParallelAnimationGroupPrivate&,QObject*) matches class "^.*$" and "QParallelAnimationGroupPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QPen::detach() matches class "^.*$" and "^detach$"
 - void QPicture::QPicture(QPicturePrivate&) matches class "^.*$" and "QPicturePrivate&" matches "^Q\w+Private( const)?\&$"
 - void QPicture::detach() matches class "^.*$" and "^detach$"
 - void QPictureIO::defineIOHandler(const char*,const char*,const char*,picture_io_handler,picture_io_handler) matches class "^QPictureIO$" and "^defineIOHandler$"
 - void QPixmap::QPixmap(QPlatformPixmap*) matches class "^Q.*$" and "QPlatformPixmap*" matches "^QPlatform.*$"
 - void QPixmap::detach() matches class "^.*$" and "^detach$"
 - void QPlainTextEdit::QPlainTextEdit(QPlainTextEditPrivate&,QWidget*) matches class "^.*$" and "QPlainTextEditPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QPolygon::point(int,int*,int*) matches class "^QPolygon$" and "^point$"
 - void QPolygon::putPoints(int,int,const QPolygon&,int) matches class "^QPolygon$" and "^putPoints$"
 - void QPolygon::putPoints(int,int,const int*) matches class "^QPolygon$" and "^putPoints$"
 - void QPolygon::putPoints(int,int,int,int) matches class "^QPolygon$" and "^putPoints$"
 - void QPolygon::setPoint(int,const QPoint&) matches class "^QPolygon$" and "^setPoint$"
 - void QPolygon::setPoint(int,int,int) matches class "^QPolygon$" and "^setPoint$"
 - void QPolygon::setPoints(int,const int*) matches class "^QPolygon$" and "^setPoints$"
 - void QPolygon::setPoints(int,int,int) matches class "^QPolygon$" and "^setPoints$"
 - void QProcess::readyReadStandardError(QProcess::QPrivateSignal) matches class "^.*$" and "QProcess::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QProcess::readyReadStandardOutput(QProcess::QPrivateSignal) matches class "^.*$" and "QProcess::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QProcess::started(QProcess::QPrivateSignal) matches class "^.*$" and "QProcess::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QProcess::stateChanged(QProcess::ProcessState,QProcess::QPrivateSignal) matches class "^.*$" and "QProcess::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QPushButton::QPushButton(QPushButtonPrivate&,QWidget*) matches class "^.*$" and "QPushButtonPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QQuaternion::QQuaternion(Qt::Initialization) matches class "^.*$" and "Qt::Initialization" matches "^Qt\:\:Initialization$"
 - void QRegion::cleanUp(QRegion::QRegionData*) matches class "^QRegion$" and "^cleanUp$"
 - void QRegion::detach() matches class "^.*$" and "^detach$"
 - void QRegularExpression::QRegularExpression(QRegularExpressionPrivate&) matches class "^.*$" and "QRegularExpressionPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QRegularExpressionMatch::QRegularExpressionMatch(QRegularExpressionMatchPrivate&) matches class "^.*$" and "QRegularExpressionMatchPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QRegularExpressionMatchIterator::QRegularExpressionMatchIterator(QRegularExpressionMatchIteratorPrivate&) matches class "^.*$" and "QRegularExpressionMatchIteratorPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QScreen::QScreen(QPlatformScreen*) matches class "^Q.*$" and "QPlatformScreen*" matches "^QPlatform.*$"
 - void QScrollArea::QScrollArea(QScrollAreaPrivate&,QWidget*) matches class "^.*$" and "QScrollAreaPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QScrollerProperties::QScrollerProperties(QScrollerPropertiesPrivate&) matches class "^.*$" and "QScrollerPropertiesPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QSequentialAnimationGroup::QSequentialAnimationGroup(QSequentialAnimationGroupPrivate&,QObject*) matches class "^.*$" and "QSequentialAnimationGroupPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QSet::QSet<T>(std::initializer_list<T>) matches class "^.*$" and "std::initializer_list<T>" matches "^std::initializer_list<.*$"
 - void QSet::detach() matches class "^.*$" and "^detach$"
 - void QSignalTransition::senderObjectChanged(QSignalTransition::QPrivateSignal) matches class "^.*$" and "QSignalTransition::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QSignalTransition::signalChanged(QSignalTransition::QPrivateSignal) matches class "^.*$" and "QSignalTransition::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QSocketNotifier::activated(QSocketDescriptor,QSocketNotifier::Type,QSocketNotifier::QPrivateSignal) matches class "^.*$" and "QSocketNotifier::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QStandardItem::QStandardItem(QStandardItemPrivate&) matches class "^.*$" and "QStandardItemPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QStandardItemModel::QStandardItemModel(QStandardItemModelPrivate&,QObject*) matches class "^.*$" and "QStandardItemModelPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QState::QState(QStatePrivate&,QState*) matches class "^.*$" and "QStatePrivate&" matches "^Q\w+Private( const)?\&$"
 - void QState::childModeChanged(QState::QPrivateSignal) matches class "^.*$" and "QState::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QState::errorStateChanged(QState::QPrivateSignal) matches class "^.*$" and "QState::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QState::finished(QState::QPrivateSignal) matches class "^.*$" and "QState::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QState::initialStateChanged(QState::QPrivateSignal) matches class "^.*$" and "QState::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QState::propertiesAssigned(QState::QPrivateSignal) matches class "^.*$" and "QState::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QStateMachine::QStateMachine(QStateMachinePrivate&,QObject*) matches class "^.*$" and "QStateMachinePrivate&" matches "^Q\w+Private( const)?\&$"
 - void QStateMachine::started(QStateMachine::QPrivateSignal) matches class "^.*$" and "QStateMachine::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QStateMachine::stopped(QStateMachine::QPrivateSignal) matches class "^.*$" and "QStateMachine::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QStaticText::detach() matches class "^.*$" and "^detach$"
 - void QStyle::QStyle(QStylePrivate&) matches class "^.*$" and "QStylePrivate&" matches "^Q\w+Private( const)?\&$"
 - void QSurfaceFormat::detach() matches class "^.*$" and "^detach$"
 - void QTableView::QTableView(QTableViewPrivate&,QWidget*) matches class "^.*$" and "QTableViewPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QTextBlock::QTextBlock(QTextDocumentPrivate*,int) matches class "^.*$" and "QTextDocumentPrivate*" matches "^Q[^H]\w+Private( const)?\*$"
 - void QTextBlockGroup::QTextBlockGroup(QTextBlockGroupPrivate&,QTextDocument*) matches class "^.*$" and "QTextBlockGroupPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QTextCursor::QTextCursor(QTextCursorPrivate*) matches class "^.*$" and "QTextCursorPrivate*" matches "^Q[^H]\w+Private( const)?\*$"
 - void QTextCursor::QTextCursor(QTextDocumentPrivate*,int) matches class "^.*$" and "QTextDocumentPrivate*" matches "^Q[^H]\w+Private( const)?\*$"
 - void QTextDocument::QTextDocument(QTextDocumentPrivate&,QObject*) matches class "^.*$" and "QTextDocumentPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QTextEdit::QTextEdit(QTextEditPrivate&,QWidget*) matches class "^.*$" and "QTextEditPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QTextFrame::QTextFrame(QTextFramePrivate&,QTextDocument*) matches class "^.*$" and "QTextFramePrivate&" matches "^Q\w+Private( const)?\&$"
 - void QTextObject::QTextObject(QTextObjectPrivate&,QTextDocument*) matches class "^.*$" and "QTextObjectPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QTextStream::QTextStream(FILE*,QIODevice::OpenMode) matches class "^.*$" and "FILE*" matches "^FILE\*$"
 - void QTextStreamManipulator::QTextStreamManipulator(QTSMFC,QChar) matches class "^.*$" and "QTSMFC" matches "^QTSMFC$"
 - void QTextStreamManipulator::QTextStreamManipulator(QTSMFI,int) matches class "^.*$" and "QTSMFI" matches "^QTSMFI$"
 - void QThread::QThread(QThreadPrivate&,QObject*) matches class "^.*$" and "QThreadPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QThread::finished(QThread::QPrivateSignal) matches class "^.*$" and "QThread::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QThread::started(QThread::QPrivateSignal) matches class "^.*$" and "QThread::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QTimeLine::finished(QTimeLine::QPrivateSignal) matches class "^.*$" and "QTimeLine::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QTimeLine::frameChanged(int,QTimeLine::QPrivateSignal) matches class "^.*$" and "QTimeLine::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QTimeLine::stateChanged(QTimeLine::State,QTimeLine::QPrivateSignal) matches class "^.*$" and "QTimeLine::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QTimeLine::valueChanged(qreal,QTimeLine::QPrivateSignal) matches class "^.*$" and "QTimeLine::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QTimeZone::QTimeZone(QTimeZonePrivate&) matches class "^.*$" and "QTimeZonePrivate&" matches "^Q\w+Private( const)?\&$"
 - void QTimer::setInterval(std::chrono::milliseconds) matches class "^.*$" and "std::chrono::milliseconds" matches "^std\:\:chrono\:\:milliseconds$"
 - void QTimer::singleShot(std::chrono::milliseconds,Qt::TimerType,const QObject*,const char*) matches class "^.*$" and "std::chrono::milliseconds" matches "^std\:\:chrono\:\:milliseconds$"
 - void QTimer::singleShot(std::chrono::milliseconds,const QObject*,const char*) matches class "^.*$" and "std::chrono::milliseconds" matches "^std\:\:chrono\:\:milliseconds$"
 - void QTimer::singleShotImpl(int,Qt::TimerType,const QObject*,QtPrivate::QSlotObjectBase*) matches class "^.*$" and "QtPrivate::QSlotObjectBase*" matches "^QtPrivate\:\:QSlotObjectBase\*$"
 - void QTimer::singleShotImpl(std::chrono::milliseconds,Qt::TimerType,const QObject*,QtPrivate::QSlotObjectBase*) matches class "^.*$" and "std::chrono::milliseconds" matches "^std\:\:chrono\:\:milliseconds$"
 - void QTimer::start(std::chrono::milliseconds) matches class "^.*$" and "std::chrono::milliseconds" matches "^std\:\:chrono\:\:milliseconds$"
 - void QTimer::timeout(QTimer::QPrivateSignal) matches class "^.*$" and "QTimer::QPrivateSignal" matches "^.*::QPrivateSignal$"
 - void QTransform::QTransform(Qt::Initialization) matches class "^.*$" and "Qt::Initialization" matches "^Qt\:\:Initialization$"
 - void QTransposeProxyModel::QTransposeProxyModel(QTransposeProxyModelPrivate&,QObject*) matches class "^.*$" and "QTransposeProxyModelPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QTreeView::QTreeView(QTreeViewPrivate&,QWidget*) matches class "^.*$" and "QTreeViewPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QUrl::detach() matches class "^.*$" and "^detach$"
 - void QUrlQuery::QUrlQuery(std::initializer_list<QPair<QString, QString> >) matches class "^.*$" and "std::initializer_list<QPair<QString, QString> >" matches "^std::initializer_list<.*$"
 - void QUuid::QUuid(Qt::Initialization) matches class "^.*$" and "Qt::Initialization" matches "^Qt\:\:Initialization$"
 - void QValidator::QValidator(QObjectPrivate&,QObject*) matches class "^.*$" and "QObjectPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QValidator::QValidator(QValidatorPrivate&,QObject*) matches class "^.*$" and "QValidatorPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QVariantAnimation::QVariantAnimation(QVariantAnimationPrivate&,QObject*) matches class "^.*$" and "QVariantAnimationPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QVector2D::QVector2D(Qt::Initialization) matches class "^.*$" and "Qt::Initialization" matches "^Qt\:\:Initialization$"
 - void QVector3D::QVector3D(Qt::Initialization) matches class "^.*$" and "Qt::Initialization" matches "^Qt\:\:Initialization$"
 - void QVector4D::QVector4D(Qt::Initialization) matches class "^.*$" and "Qt::Initialization" matches "^Qt\:\:Initialization$"
 - void QVector::QVector<T>(std::initializer_list<T>) matches class "^.*$" and "std::initializer_list<T>" matches "^std::initializer_list<.*$"
 - void QVector::detach() matches class "^.*$" and "^detach$"
 - void QVersionNumber::QVersionNumber(std::initializer_list<int>) matches class "^.*$" and "std::initializer_list<int>" matches "^std::initializer_list<.*$"
 - void QWidget::QWidget(QWidgetPrivate&,QWidget*,Qt::WindowFlags) matches class "^.*$" and "QWidgetPrivate&" matches "^Q\w+Private( const)?\&$"
 - void QWindow::QWindow(QWindowPrivate&,QWindow*) matches class "^.*$" and "QWindowPrivate&" matches "^Q\w+Private( const)?\&$"
 - void* QOpenGLExtraFunctions::glMapBufferRange(GLenum,GLintptr,GLsizeiptr,GLbitfield) matches class "^QOpenGL.*$" and "GLintptr" matches "^GLintptr$"
************************************************************************

************************************************************************
Type redefined to not be a class
************************************************************************

************************************************************************
Unmatched argument type
 - QBitmap QCursor::bitmap(Qt::ReturnByValueConstant): unmatched type 'Qt::ReturnByValueConstant' in parameter #1: Unable to translate type "Qt::ReturnByValueConstant": Cannot find type entry for "Qt::ReturnByValueConstant".
 - QBitmap QCursor::mask(Qt::ReturnByValueConstant): unmatched type 'Qt::ReturnByValueConstant' in parameter #1: Unable to translate type "Qt::ReturnByValueConstant": Cannot find type entry for "Qt::ReturnByValueConstant".
 - QByteArray QByteArray::fromStdString(const std::string&): unmatched type 'const std::string&' in parameter #1 "s": Unable to translate type "const std::string&": Cannot find type entry for "std::string".
 - QByteArray QTextCodec::fromUnicode(QStringView): unmatched type 'QStringView' in parameter #1 "uc": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - QByteArray QTextEncoder::fromUnicode(QStringView): unmatched type 'QStringView' in parameter #1 "str": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - QCborValue QCborArray::extract(QCborArray::ConstIterator): unmatched type 'QCborArray::ConstIterator' in parameter #1 "it": Unable to translate type "QCborArray::ConstIterator": Cannot find type entry for "QCborArray::ConstIterator".
 - QCborValue QCborArray::extract(QCborArray::Iterator): unmatched type 'QCborArray::Iterator' in parameter #1 "it": Unable to translate type "QCborArray::Iterator": Cannot find type entry for "QCborArray::Iterator".
 - QCborValue QCborMap::extract(QCborMap::const_iterator): unmatched type 'QCborMap::const_iterator' in parameter #1 "it": Unable to translate type "QCborMap::const_iterator": Cannot find type entry for "QCborMap::ConstIterator".
 - QCborValue QCborMap::extract(QCborMap::iterator): unmatched type 'QCborMap::iterator' in parameter #1 "it": Unable to translate type "QCborMap::iterator": Cannot find type entry for "QCborMap::Iterator".
 - QColor QColor::fromRgba64(QRgba64): unmatched type 'QRgba64' in parameter #1 "rgba": Unable to translate type "QRgba64": Cannot find type entry for "QRgba64".
 - QDateTime QFileInfo::fileTime(QFile::FileTime): unmatched type 'QFile::FileTime' in parameter #1 "time": Unable to translate type "QFile::FileTime": Cannot find type entry for "QFile::FileTime".
 - QLinkedList<T> QLinkedList::fromStdList(const std::list<T>&): unmatched type 'const std::list<T>&' in parameter #1 "list": Unable to translate type "const std::list<T>&": Cannot find type entry for "std::list".
 - QList<T> QList::fromStdList(const std::list<T>&): unmatched type 'const std::list<T>&' in parameter #1 "list": Unable to translate type "const std::list<T>&": Cannot find type entry for "std::list".
 - QPicture QLabel::picture(Qt::ReturnByValueConstant): unmatched type 'Qt::ReturnByValueConstant' in parameter #1: Unable to translate type "Qt::ReturnByValueConstant": Cannot find type entry for "Qt::ReturnByValueConstant".
 - QPixmap QLabel::pixmap(Qt::ReturnByValueConstant): unmatched type 'Qt::ReturnByValueConstant' in parameter #1: Unable to translate type "Qt::ReturnByValueConstant": Cannot find type entry for "Qt::ReturnByValueConstant".
 - QRegularExpressionMatch QRegularExpression::match(QStringView,int,QRegularExpression::MatchType,QRegularExpression::MatchOptions): unmatched type 'QStringView' in parameter #1 "subject": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - QRegularExpressionMatchIterator QRegularExpression::globalMatch(QStringView,int,QRegularExpression::MatchType,QRegularExpression::MatchOptions): unmatched type 'QStringView' in parameter #1 "subject": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - QRunnable* QRunnable::create(std::function<void ()>): unmatched type 'std::function<void ()>' in parameter #1 "functionToRun": Unable to translate type "std::function<void ()>": Cannot find type entry for "std::function".
 - QString QCalendar::dateTimeToString(QStringView,const QDateTime&,const QDate&,const QTime&,const QLocale&): unmatched type 'QStringView' in parameter #1 "format": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - QString QDate::toString(QStringView): unmatched type 'QStringView' in parameter #1 "format": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - QString QDate::toString(QStringView,QCalendar): unmatched type 'QStringView' in parameter #1 "format": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - QString QDateTime::toString(QStringView): unmatched type 'QStringView' in parameter #1 "format": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - QString QDateTime::toString(QStringView,QCalendar): unmatched type 'QStringView' in parameter #1 "format": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - QString QLocale::toString(const QDate&,QStringView): unmatched type 'QStringView' in parameter #2 "formatStr": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - QString QLocale::toString(const QDate&,QStringView,QCalendar): unmatched type 'QStringView' in parameter #2 "formatStr": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - QString QLocale::toString(const QDateTime&,QStringView): unmatched type 'QStringView' in parameter #2 "format": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - QString QLocale::toString(const QDateTime&,QStringView,QCalendar): unmatched type 'QStringView' in parameter #2 "formatStr": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - QString QLocale::toString(const QTime&,QStringView): unmatched type 'QStringView' in parameter #2 "formatStr": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - QString QRegularExpression::anchoredPattern(QStringView): unmatched type 'QStringView' in parameter #1 "expression": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - QString QRegularExpression::escape(QStringView): unmatched type 'QStringView' in parameter #1 "str": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - QString QRegularExpression::wildcardToRegularExpression(QStringView): unmatched type 'QStringView' in parameter #1 "str": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - QString QRegularExpressionMatch::captured(QStringView): unmatched type 'QStringView' in parameter #1 "name": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - QString QTime::toString(QStringView): unmatched type 'QStringView' in parameter #1 "format": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - QStringList QProcess::splitCommand(QStringView): unmatched type 'QStringView' in parameter #1 "command": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - QStringRef QRegularExpressionMatch::capturedRef(QStringView): unmatched type 'QStringView' in parameter #1 "name": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - QTextStream& QTextStream::operator<<(QStringView): unmatched type 'QStringView' in parameter #1 "s": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - QThread* QThread::createThreadImpl(std::future<void>&&): unmatched type 'std::future<void>&&' in parameter #1 "future": Unable to translate type "std::future<void>&&": Cannot find type entry for "std::future".
 - QUuid QUuid::fromString(QStringView): unmatched type 'QStringView' in parameter #1 "string": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - QVector<T> QVector::fromStdVector(const std::vector<T>&): unmatched type 'const std::vector<T>&' in parameter #1 "vector": Unable to translate type "const std::vector<T>&": Cannot find type entry for "std::vector".
 - QVersionNumber QVersionNumber::fromString(QStringView,int*): unmatched type 'QStringView' in parameter #1 "string": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - bool QApplication::compressEvent(QEvent*,QObject*,QPostEventList*): unmatched type 'QPostEventList*' in parameter #3: Unable to translate type "QPostEventList*": Cannot find type entry for "QPostEventList".
 - bool QBasicMutex::fastTryLock(QMutexData*&): unmatched type 'QMutexData*&' in parameter #1 "current": Unable to translate type "QMutexData*&": Cannot find type entry for "QMutexData".
 - bool QBasicMutex::fastTryUnlock(QMutexData*&): unmatched type 'QMutexData*&' in parameter #1 "current": Unable to translate type "QMutexData*&": Cannot find type entry for "QMutexData".
 - bool QCollator::operator()(QStringView,QStringView): unmatched type 'QStringView' in parameter #1 "s1": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - bool QColor::isValidColor(QStringView): unmatched type 'QStringView' in parameter #1: Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - bool QFileInfo::permission(QFile::Permissions): unmatched type 'QFile::Permissions' in parameter #1 "permissions": Unable to translate type "QFile::Permissions": Cannot find type entry for "QFile::Permissions".
 - bool QGuiApplication::compressEvent(QEvent*,QObject*,QPostEventList*): unmatched type 'QPostEventList*' in parameter #3: Unable to translate type "QPostEventList*": Cannot find type entry for "QPostEventList".
 - bool QHash::isSharedWith(const QHash<K, V>&): unmatched type 'const QHash<K, V>&' in parameter #1 "other": Unable to translate template argument 1K: Unable to translate type "K": Cannot find type entry for "K".
 - bool QHash::isValidIterator(const QHash::const_iterator&): unmatched type 'const QHash::const_iterator&' in parameter #1 "it": Unable to translate type "const QHash::const_iterator&": Cannot find type entry for "QHash<Key,T>::const_iterator".
 - bool QHash::isValidIterator(const QHash::iterator&): unmatched type 'const QHash::iterator&' in parameter #1 "it": Unable to translate type "const QHash::iterator&": Cannot find type entry for "QHash<Key,T>::iterator".
 - bool QHash::operator!=(const QHash<K, V>&): unmatched type 'const QHash<K, V>&' in parameter #1 "other": Unable to translate template argument 1K: Unable to translate type "K": Cannot find type entry for "K".
 - bool QHash::operator==(const QHash<K, V>&): unmatched type 'const QHash<K, V>&' in parameter #1 "other": Unable to translate template argument 1K: Unable to translate type "K": Cannot find type entry for "K".
 - bool QList::isValidIterator(const QList::iterator&): unmatched type 'const QList::iterator&' in parameter #1 "i": Unable to translate type "const QList::iterator&": Cannot find type entry for "QList<T>::iterator".
 - bool QMap::isValidIterator(const QMap::const_iterator&): unmatched type 'const QMap::const_iterator&' in parameter #1 "ci": Unable to translate type "const QMap::const_iterator&": Cannot find type entry for "QMap<Key,T>::const_iterator".
 - bool QOpenGLExtraFunctions::isInitialized(const QOpenGLExtraFunctionsPrivate*): unmatched type 'const QOpenGLExtraFunctionsPrivate*' in parameter #1 "d": Unable to translate type "const QOpenGLExtraFunctionsPrivate*": Cannot find type entry for "QOpenGLExtraFunctionsPrivate".
 - bool QOpenGLFunctions::isInitialized(const QOpenGLFunctionsPrivate*): unmatched type 'const QOpenGLFunctionsPrivate*' in parameter #1 "d": Unable to translate type "const QOpenGLFunctionsPrivate*": Cannot find type entry for "QOpenGLFunctionsPrivate".
 - bool QSet::isValidIterator(const QSet::const_iterator&): unmatched type 'const QSet::const_iterator&' in parameter #1 "i": Unable to translate type "const QSet::const_iterator&": Cannot find type entry for "QSet<T>::const_iterator".
 - bool QSet::isValidIterator(const QSet::iterator&): unmatched type 'const QSet::iterator&' in parameter #1 "i": Unable to translate type "const QSet::iterator&": Cannot find type entry for "QSet<T>::iterator".
 - bool QTextCodec::canEncode(QStringView): unmatched type 'QStringView' in parameter #1: Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - bool QThreadPool::tryStart(std::function<void ()>): unmatched type 'std::function<void ()>' in parameter #1 "functionToRun": Unable to translate type "std::function<void ()>": Cannot find type entry for "std::function".
 - bool QVector::isValidIterator(const QVector::iterator&): unmatched type 'const QVector::iterator&' in parameter #1 "i": Unable to translate type "const QVector::iterator&": Cannot find type entry for "typename Data::iterator".
 - bool qt_gui_cpp::RosPluginlibPluginProvider::parseManifest(const std::string&,const std::string&,QString&,QString&,QString&,QString&,qt_gui_cpp::PluginDescriptor*): unmatched type 'const std::string&' in parameter #1 "lookup_name": Unable to translate type "const std::string&": Cannot find type entry for "std::string".
 - const QJsonValue QJsonDocument::operator[](QStringView): unmatched type 'QStringView' in parameter #1 "key": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - const QJsonValue QJsonValue::operator[](QStringView): unmatched type 'QStringView' in parameter #1 "key": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - double QLocale::toDouble(QStringView,bool*): unmatched type 'QStringView' in parameter #1 "s": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - float QLocale::toFloat(QStringView,bool*): unmatched type 'QStringView' in parameter #1 "s": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - int QCollator::compare(QStringView,QStringView): unmatched type 'QStringView' in parameter #1 "s1": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - int QLocale::toInt(QStringView,bool*): unmatched type 'QStringView' in parameter #1 "s": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - int QRegularExpressionMatch::capturedEnd(QStringView): unmatched type 'QStringView' in parameter #1 "name": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - int QRegularExpressionMatch::capturedLength(QStringView): unmatched type 'QStringView' in parameter #1 "name": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - int QRegularExpressionMatch::capturedStart(QStringView): unmatched type 'QStringView' in parameter #1 "name": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - long QLocale::toLong(QStringView,bool*): unmatched type 'QStringView' in parameter #1 "s": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - qlonglong QLocale::toLongLong(QStringView,bool*): unmatched type 'QStringView' in parameter #1 "s": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - qulonglong QLocale::toULongLong(QStringView,bool*): unmatched type 'QStringView' in parameter #1 "s": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - short QLocale::toShort(QStringView,bool*): unmatched type 'QStringView' in parameter #1 "s": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - uint QLocale::toUInt(QStringView,bool*): unmatched type 'QStringView' in parameter #1 "s": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - ulong QLocale::toULong(QStringView,bool*): unmatched type 'QStringView' in parameter #1 "s": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - ushort QLocale::toUShort(QStringView,bool*): unmatched type 'QStringView' in parameter #1 "s": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - void QAccessible::installActivationObserver(QAccessible::ActivationObserver*): unmatched type 'QAccessible::ActivationObserver*' in parameter #1: Unable to translate type "QAccessible::ActivationObserver*": Cannot find type entry for "QAccessible::ActivationObserver".
 - void QAccessible::installFactory(QAccessible::InterfaceFactory): unmatched type 'QAccessible::InterfaceFactory' in parameter #1: Unable to translate type "QAccessible::InterfaceFactory": Unsupported function pointer.
 - void QAccessible::removeActivationObserver(QAccessible::ActivationObserver*): unmatched type 'QAccessible::ActivationObserver*' in parameter #1: Unable to translate type "QAccessible::ActivationObserver*": Cannot find type entry for "QAccessible::ActivationObserver".
 - void QAccessible::removeFactory(QAccessible::InterfaceFactory): unmatched type 'QAccessible::InterfaceFactory' in parameter #1: Unable to translate type "QAccessible::InterfaceFactory": Unsupported function pointer.
 - void QByteArray::reallocData(uint,Data::AllocationOptions): unmatched type 'Data::AllocationOptions' in parameter #2 "options": Unable to translate type "Data::AllocationOptions": Cannot find type entry for "Data::AllocationOptions".
 - void QCalendar::QCalendar(QStringView): unmatched type 'QStringView' in parameter #1 "name": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - void QCborStreamWriter::append(QCborNegativeInteger): unmatched type 'QCborNegativeInteger' in parameter #1 "n": Unable to translate type "QCborNegativeInteger": Cannot find type entry for "QCborNegativeInteger".
 - void QCborStreamWriter::append(QCborTag): unmatched type 'QCborTag' in parameter #1 "tag": Unable to translate type "QCborTag": Cannot find type entry for "QCborTag".
 - void QCborStreamWriter::append(QStringView): unmatched type 'QStringView' in parameter #1 "str": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - void QCborValue::QCborValue(QCborTag,const QCborValue&): unmatched type 'QCborTag' in parameter #1 "tag": Unable to translate type "QCborTag": Cannot find type entry for "QCborTag".
 - void QCborValue::QCborValue(QStringView): unmatched type 'QStringView' in parameter #1 "s": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - void QColor::QColor(QRgba64): unmatched type 'QRgba64' in parameter #1 "rgba64": Unable to translate type "QRgba64": Cannot find type entry for "QRgba64".
 - void QColor::QColor(QStringView): unmatched type 'QStringView' in parameter #1 "name": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - void QColor::setNamedColor(QStringView): unmatched type 'QStringView' in parameter #1 "name": Unable to translate type "QStringView": Cannot find type entry for "QStringView".
 - void QColor::setRgba64(QRgba64): unmatched type 'QRgba64' in parameter #1 "rgba": Unable to translate type "QRgba64": Cannot find type entry for "QRgba64".
 - void QDateTimeEdit::QDateTimeEdit(const QVariant&,QMetaType::Type,QWidget*): unmatched type 'QMetaType::Type' in parameter #2 "parserType": Unable to translate type "QMetaType::Type": Cannot find type entry for "QMetaType::Type".
 - void QFileDialog::QFileDialog(const QFileDialogArgs&): unmatched type 'const QFileDialogArgs&' in parameter #1 "args": Unable to translate type "const QFileDialogArgs&": Cannot find type entry for "QFileDialogArgs".
 - void QFileDialog::getOpenFileContent(const QString&,const std::function<void (const QString &, const QByteArray &)>&): unmatched type 'const std::function<void (const QString &, const QByteArray &)>&' in parameter #2 "fileContentsReady": Unable to translate type "const std::function<void (const QString &, const QByteArray &)>&": Cannot find type entry for "std::function".
 - void QFontDatabase::load(const QFontPrivate*,int): unmatched type 'const QFontPrivate*' in parameter #1 "d": Unable to translate type "const QFontPrivate*": Cannot find type entry for "QFontPrivate".
 - void QFuture::QFuture<T>(QFutureInterface<T>*): unmatched type 'QFutureInterface<T>*' in parameter #1 "p": Unable to translate type "QFutureInterface<T>*": Cannot find type entry for "QFutureInterface".
 - void QFutureInterfaceBase::reportException(const QException&): unmatched type 'const QException&' in parameter #1 "e": Unable to translate type "const QException&": Cannot find type entry for "QException".
 - void QHash::QHash<K, V>(QHash<K, V>&&): unmatched type 'QHash<K, V>&&' in parameter #1 "other": Unable to translate template argument 1K: Unable to translate type "K": Cannot find type entry for "K".
 - void QHash::QHash<K, V>(const QHash<K, V>&): unmatched type 'const QHash<K, V>&' in parameter #1 "other": Unable to translate template argument 1K: Unable to translate type "K": Cannot find type entry for "K".
 - void QHash::deleteNode(QHash::Node*): unmatched type 'QHash::Node*' in parameter #1 "node": Unable to translate type "QHash::Node*": Cannot find type entry for "QHashNode".
 - void QHash::freeData(QHashData*): unmatched type 'QHashData*' in parameter #1 "d": Unable to translate type "QHashData*": Cannot find type entry for "QHashData".
 - void QHash::insert(const QHash<K, V>&): unmatched type 'const QHash<K, V>&' in parameter #1 "hash": Unable to translate template argument 1K: Unable to translate type "K": Cannot find type entry for "K".
 - void QHash::swap(QHash<K, V>&): unmatched type 'QHash<K, V>&' in parameter #1 "other": Unable to translate template argument 1K: Unable to translate type "K": Cannot find type entry for "K".
 - void QImage::applyColorTransform(const QColorTransform&): unmatched type 'const QColorTransform&' in parameter #1 "transform": Unable to translate type "const QColorTransform&": Cannot find type entry for "QColorTransform".
 - void QInputDialog::setOptions(QInputDialog::InputDialogOptions): unmatched type 'QInputDialog::InputDialogOptions' in parameter #1 "options": Unable to translate type "QInputDialog::InputDialogOptions": Cannot find type entry for "QFlags<QInputDialog::InputDialogOption>".
 - void QMap::QMap<K, V>(const typename std::map<Key, T>&): unmatched type 'const typename std::map<Key, T>&' in parameter #1 "other": Unable to translate type "const typename std::map<Key, T>&": Cannot find type entry for "typename std::map".
 - void QMimeType::QMimeType(const QMimeTypePrivate&): unmatched type 'const QMimeTypePrivate&' in parameter #1 "dd": Unable to translate type "const QMimeTypePrivate&": Cannot find type entry for "QMimeTypePrivate".
 - void QOpenGLContext::setQGLContextHandle(void*,void (*)(void*)): unmatched type 'void (*)(void*)' in parameter #2 "qGLContextDeleteFunction": Unable to translate type "void (*)(void*)": Unsupported function pointer.
 - void QOpenGLExtraFunctions::glDebugMessageCallback(GLDEBUGPROC,const void*): unmatched type 'GLDEBUGPROC' in parameter #1 "callback": Unable to translate type "GLDEBUGPROC": Unsupported function pointer.
 - void QOpenGLExtraFunctions::glGetBufferParameteri64v(GLenum,GLenum,GLint64*): unmatched type 'GLint64*' in parameter #3 "params": Unable to translate type "GLint64*": Cannot find type entry for "int64_t".
 - void QOpenGLExtraFunctions::glGetInteger64i_v(GLenum,GLuint,GLint64*): unmatched type 'GLint64*' in parameter #3 "data": Unable to translate type "GLint64*": Cannot find type entry for "int64_t".
 - void QOpenGLExtraFunctions::glGetInteger64v(GLenum,GLint64*): unmatched type 'GLint64*' in parameter #2 "data": Unable to translate type "GLint64*": Cannot find type entry for "int64_t".
 - void QPainter::drawGlyphRun(const QPointF&,const QGlyphRun&): unmatched type 'const QGlyphRun&' in parameter #2 "glyphRun": Unable to translate type "const QGlyphRun&": Cannot find type entry for "QGlyphRun".
 - void QPluginLoader::setLoadHints(QLibrary::LoadHints): unmatched type 'QLibrary::LoadHints' in parameter #1 "loadHints": Unable to translate type "QLibrary::LoadHints": Cannot find type entry for "QFlags<QLibrary::LoadHint>".
 - void QRandomGenerator64::QRandomGenerator64(QRandomGenerator::System): unmatched type 'QRandomGenerator::System' in parameter #1: Unable to translate type "QRandomGenerator::System": Cannot find type entry for "QRandomGenerator::System".
 - void QRandomGenerator64::QRandomGenerator64(std::seed_seq&): unmatched type 'std::seed_seq&' in parameter #1 "sseq": Unable to translate type "std::seed_seq&": Cannot find type entry for "std::seed_seq".
 - void QRandomGenerator::QRandomGenerator(QRandomGenerator::System): unmatched type 'QRandomGenerator::System' in parameter #1: Unable to translate type "QRandomGenerator::System": Cannot find type entry for "QRandomGenerator::System".
 - void QRandomGenerator::QRandomGenerator(std::seed_seq&): unmatched type 'std::seed_seq&' in parameter #1 "sseq": Unable to translate type "std::seed_seq&": Cannot find type entry for "std::seed_seq".
 - void QRandomGenerator::seed(std::seed_seq&): unmatched type 'std::seed_seq&' in parameter #1 "sseq": Unable to translate type "std::seed_seq&": Cannot find type entry for "std::seed_seq".
 - void QSizePolicy::QSizePolicy(QSizePolicy::Bits): unmatched type 'QSizePolicy::Bits' in parameter #1 "b": Unable to translate type "QSizePolicy::Bits": Cannot find type entry for "QSizePolicy::Bits".
 - void QTextBlock::iterator::iterator(const QTextDocumentPrivate*,int,int,int): unmatched type 'const QTextDocumentPrivate*' in parameter #1 "priv": Unable to translate type "const QTextDocumentPrivate*": Cannot find type entry for "QTextDocumentPrivate".
 - void QTextDocument::appendUndoItem(QAbstractUndoItem*): unmatched type 'QAbstractUndoItem*' in parameter #1: Unable to translate type "QAbstractUndoItem*": Cannot find type entry for "QAbstractUndoItem".
 - void QTextFragment::QTextFragment(const QTextDocumentPrivate*,int,int): unmatched type 'const QTextDocumentPrivate*' in parameter #1 "priv": Unable to translate type "const QTextDocumentPrivate*": Cannot find type entry for "QTextDocumentPrivate".
 - void QTextFrame::setLayoutData(QTextFrameLayoutData*): unmatched type 'QTextFrameLayoutData*' in parameter #1 "data": Unable to translate type "QTextFrameLayoutData*": Cannot find type entry for "QTextFrameLayoutData".
 - void QTextInlineObject::QTextInlineObject(int,QTextEngine*): unmatched type 'QTextEngine*' in parameter #2 "e": Unable to translate type "QTextEngine*": Cannot find type entry for "QTextEngine".
 - void QTextLayout::QTextLayout(QTextEngine*): unmatched type 'QTextEngine*' in parameter #1 "e": Unable to translate type "QTextEngine*": Cannot find type entry for "QTextEngine".
 - void QTextLine::QTextLine(int,QTextEngine*): unmatched type 'QTextEngine*' in parameter #2 "e": Unable to translate type "QTextEngine*": Cannot find type entry for "QTextEngine".
 - void QThreadPool::start(std::function<void ()>,int): unmatched type 'std::function<void ()>' in parameter #1 "functionToRun": Unable to translate type "std::function<void ()>": Cannot find type entry for "std::function".
 - void QVariantAnimation::registerInterpolator(QVariantAnimation::Interpolator,int): unmatched type 'QVariantAnimation::Interpolator' in parameter #1 "func": Unable to translate type "QVariantAnimation::Interpolator": Unsupported function pointer.
 - void QVector::QVector<T>(QArrayDataPointerRef<T>): unmatched type 'QArrayDataPointerRef<T>' in parameter #1 "ref": Unable to translate type "QArrayDataPointerRef<T>": Cannot find type entry for "QArrayDataPointerRef".
 - void QVector::freeData(QVector::Data*): unmatched type 'QVector::Data*' in parameter #1 "d": Unable to translate type "QVector::Data*": Cannot find type entry for "QTypedArrayData".
 - void QWindow::setVulkanInstance(QVulkanInstance*): unmatched type 'QVulkanInstance*' in parameter #1 "instance": Unable to translate type "QVulkanInstance*": Cannot find type entry for "QVulkanInstance".
 - void qt_gui_cpp::RosPluginlibPluginProvider::parseActionAttributes(TiXmlElement*,const std::string&,QString&,QString&,QString&,QString&): unmatched type 'TiXmlElement*' in parameter #1 "element": Unable to translate type "TiXmlElement*": Cannot find type entry for "TiXmlElement".
************************************************************************

************************************************************************
Unmatched return type
 - GLsync QOpenGLExtraFunctions::glFenceSync(GLenum,GLbitfield)
 - GLuint64 QOpenGLTimerQuery::waitForResult()
 - GLuint64 QOpenGLTimerQuery::waitForTimestamp()
 - QAccessible::RootObjectHandler QAccessible::installRootObjectHandler(QAccessible::RootObjectHandler)
 - QAccessible::UpdateHandler QAccessible::installUpdateHandler(QAccessible::UpdateHandler)
 - QAccessibleActionInterface* QAccessibleInterface::actionInterface()
 - QAccessibleImageInterface* QAccessibleInterface::imageInterface()
 - QAccessibleTableInterface* QAccessibleInterface::tableInterface()
 - QBitRef QBitArray::operator[](int)
 - QBitRef QBitArray::operator[](uint)
 - QByteArray::QNoImplicitBoolCast QByteArray::operator int()
 - QByteArray::const_reverse_iterator QByteArray::crbegin()
 - QByteArray::const_reverse_iterator QByteArray::crend()
 - QByteArray::const_reverse_iterator QByteArray::rbegin()
 - QByteArray::const_reverse_iterator QByteArray::rend()
 - QByteArray::reverse_iterator QByteArray::rbegin()
 - QByteArray::reverse_iterator QByteArray::rend()
 - QByteRef QByteArray::back()
 - QByteRef QByteArray::front()
 - QByteRef QByteArray::operator[](int)
 - QByteRef QByteArray::operator[](uint)
 - QCborArray::const_iterator QCborArray::begin()
 - QCborArray::const_iterator QCborArray::cbegin()
 - QCborArray::const_iterator QCborArray::cend()
 - QCborArray::const_iterator QCborArray::constBegin()
 - QCborArray::const_iterator QCborArray::constEnd()
 - QCborArray::const_iterator QCborArray::end()
 - QCborArray::iterator QCborArray::begin()
 - QCborArray::iterator QCborArray::end()
 - QCborArray::iterator QCborArray::erase(QCborArray::const_iterator)
 - QCborArray::iterator QCborArray::erase(QCborArray::iterator)
 - QCborArray::iterator QCborArray::insert(QCborArray::const_iterator,const QCborValue&)
 - QCborArray::iterator QCborArray::insert(QCborArray::iterator,const QCborValue&)
 - QCborMap::const_iterator QCborMap::begin()
 - QCborMap::const_iterator QCborMap::cbegin()
 - QCborMap::const_iterator QCborMap::cend()
 - QCborMap::const_iterator QCborMap::constBegin()
 - QCborMap::const_iterator QCborMap::constEnd()
 - QCborMap::const_iterator QCborMap::constFind(QLatin1String)
 - QCborMap::const_iterator QCborMap::constFind(const QCborValue&)
 - QCborMap::const_iterator QCborMap::constFind(const QString&)
 - QCborMap::const_iterator QCborMap::constFind(qint64)
 - QCborMap::const_iterator QCborMap::end()
 - QCborMap::const_iterator QCborMap::find(QLatin1String)
 - QCborMap::const_iterator QCborMap::find(const QCborValue&)
 - QCborMap::const_iterator QCborMap::find(const QString&)
 - QCborMap::const_iterator QCborMap::find(qint64)
 - QCborMap::iterator QCborMap::begin()
 - QCborMap::iterator QCborMap::end()
 - QCborMap::iterator QCborMap::erase(QCborMap::const_iterator)
 - QCborMap::iterator QCborMap::erase(QCborMap::iterator)
 - QCborMap::iterator QCborMap::find(QLatin1String)
 - QCborMap::iterator QCborMap::find(const QCborValue&)
 - QCborMap::iterator QCborMap::find(const QString&)
 - QCborMap::iterator QCborMap::find(qint64)
 - QCborMap::iterator QCborMap::insert(QCborMap::value_type)
 - QCborMap::iterator QCborMap::insert(QLatin1String,const QCborValue&)
 - QCborMap::iterator QCborMap::insert(const QCborValue&,const QCborValue&)
 - QCborMap::iterator QCborMap::insert(const QString&,const QCborValue&)
 - QCborMap::iterator QCborMap::insert(qint64,const QCborValue&)
 - QCborNegativeInteger QCborStreamReader::toNegativeInteger()
 - QCborTag QCborStreamReader::toTag()
 - QCborTag QCborValue::tag(QCborTag)
 - QCborValueRef QCborArray::first()
 - QCborValueRef QCborArray::last()
 - QCborValueRef QCborArray::operator[](qsizetype)
 - QCborValueRef QCborMap::operator[](QLatin1String)
 - QCborValueRef QCborMap::operator[](const QCborValue&)
 - QCborValueRef QCborMap::operator[](const QString&)
 - QCborValueRef QCborMap::operator[](qint64)
 - QCborValueRef QCborValue::operator[](QLatin1String)
 - QCborValueRef QCborValue::operator[](const QString&)
 - QCborValueRef QCborValue::operator[](qint64)
 - QColorTransform QColorSpace::transformationToColorSpace(const QColorSpace&)
 - QFile::Permissions QFileInfo::permissions()
 - QFile::Permissions QFileSystemModel::permissions(const QModelIndex&)
 - QFontEngine* QFontDatabase::findFont(const QFontDef&,int)
 - QFormLayout::TakeRowResult QFormLayout::takeRow(QLayout*)
 - QFormLayout::TakeRowResult QFormLayout::takeRow(QWidget*)
 - QFormLayout::TakeRowResult QFormLayout::takeRow(int)
 - QFunctionPointer QGuiApplication::platformFunction(const QByteArray&)
 - QFunctionPointer QOpenGLContext::getProcAddress(const QByteArray&)
 - QFunctionPointer QOpenGLContext::getProcAddress(const char*)
 - QFuture::const_iterator QFuture::begin()
 - QFuture::const_iterator QFuture::constBegin()
 - QFuture::const_iterator QFuture::constEnd()
 - QFuture::const_iterator QFuture::end()
 - QGraphicsEffectSource* QGraphicsEffect::source()
 - QHash::Node* QHash::concrete(QHashData::Node*)
 - QHash::Node* QHash::createNode(uint,const Key&,const T&,QHash::Node**)
 - QHash::Node** QHash::findNode(const Key&,uint)
 - QHash::Node** QHash::findNode(const Key&,uint*)
 - QHash::const_iterator QHash::begin()
 - QHash::const_iterator QHash::cbegin()
 - QHash::const_iterator QHash::cend()
 - QHash::const_iterator QHash::constBegin()
 - QHash::const_iterator QHash::constEnd()
 - QHash::const_iterator QHash::constFind(const Key&)
 - QHash::const_iterator QHash::end()
 - QHash::const_iterator QHash::find(const Key&)
 - QHash::const_key_value_iterator QHash::constKeyValueBegin()
 - QHash::const_key_value_iterator QHash::constKeyValueEnd()
 - QHash::const_key_value_iterator QHash::keyValueBegin()
 - QHash::const_key_value_iterator QHash::keyValueEnd()
 - QHash::iterator QHash::begin()
 - QHash::iterator QHash::end()
 - QHash::iterator QHash::erase(QHash::const_iterator)
 - QHash::iterator QHash::erase(QHash::iterator)
 - QHash::iterator QHash::find(const Key&)
 - QHash::iterator QHash::insert(const Key&,const T&)
 - QHash::iterator QHash::insertMulti(const Key&,const T&)
 - QHash::key_iterator QHash::keyBegin()
 - QHash::key_iterator QHash::keyEnd()
 - QHash::key_value_iterator QHash::keyValueBegin()
 - QHash::key_value_iterator QHash::keyValueEnd()
 - QHash<K, V>& QHash::operator=(QHash<K, V>&&)
 - QHash<K, V>& QHash::operator=(const QHash<K, V>&)
 - QHash<K, V>& QHash::unite(const QHash<K, V>&)
 - QIncompatibleFlag Qt::operator|(Alignment::enum_type,int)
 - QIncompatibleFlag Qt::operator|(DockWidgetAreas::enum_type,int)
 - QIncompatibleFlag Qt::operator|(DropActions::enum_type,int)
 - QIncompatibleFlag Qt::operator|(Edges::enum_type,int)
 - QIncompatibleFlag Qt::operator|(GestureFlags::enum_type,int)
 - QIncompatibleFlag Qt::operator|(ImageConversionFlags::enum_type,int)
 - QIncompatibleFlag Qt::operator|(InputMethodHints::enum_type,int)
 - QIncompatibleFlag Qt::operator|(InputMethodQueries::enum_type,int)
 - QIncompatibleFlag Qt::operator|(ItemFlags::enum_type,int)
 - QIncompatibleFlag Qt::operator|(KeyboardModifiers::enum_type,int)
 - QIncompatibleFlag Qt::operator|(MatchFlags::enum_type,int)
 - QIncompatibleFlag Qt::operator|(MouseButtons::enum_type,int)
 - QIncompatibleFlag Qt::operator|(MouseEventFlags::enum_type,int)
 - QIncompatibleFlag Qt::operator|(Orientations::enum_type,int)
 - QIncompatibleFlag Qt::operator|(ScreenOrientations::enum_type,int)
 - QIncompatibleFlag Qt::operator|(SplitBehavior::enum_type,int)
 - QIncompatibleFlag Qt::operator|(TextInteractionFlags::enum_type,int)
 - QIncompatibleFlag Qt::operator|(ToolBarAreas::enum_type,int)
 - QIncompatibleFlag Qt::operator|(TouchPointStates::enum_type,int)
 - QIncompatibleFlag Qt::operator|(WindowFlags::enum_type,int)
 - QIncompatibleFlag Qt::operator|(WindowStates::enum_type,int)
 - QInputDialog::InputDialogOptions QInputDialog::options()
 - QJsonArray::const_iterator QJsonArray::begin()
 - QJsonArray::const_iterator QJsonArray::cbegin()
 - QJsonArray::const_iterator QJsonArray::cend()
 - QJsonArray::const_iterator QJsonArray::constBegin()
 - QJsonArray::const_iterator QJsonArray::constEnd()
 - QJsonArray::const_iterator QJsonArray::end()
 - QJsonArray::iterator QJsonArray::begin()
 - QJsonArray::iterator QJsonArray::end()
 - QJsonArray::iterator QJsonArray::erase(QJsonArray::iterator)
 - QJsonArray::iterator QJsonArray::insert(QJsonArray::iterator,const QJsonValue&)
 - QJsonValueRef QJsonArray::operator[](int)
 - QLibrary::LoadHints QPluginLoader::loadHints()
 - QLinkedList::const_iterator QLinkedList::begin()
 - QLinkedList::const_iterator QLinkedList::cbegin()
 - QLinkedList::const_iterator QLinkedList::cend()
 - QLinkedList::const_iterator QLinkedList::constBegin()
 - QLinkedList::const_iterator QLinkedList::constEnd()
 - QLinkedList::const_iterator QLinkedList::end()
 - QLinkedList::const_reverse_iterator QLinkedList::crbegin()
 - QLinkedList::const_reverse_iterator QLinkedList::crend()
 - QLinkedList::const_reverse_iterator QLinkedList::rbegin()
 - QLinkedList::const_reverse_iterator QLinkedList::rend()
 - QLinkedList::iterator QLinkedList::begin()
 - QLinkedList::iterator QLinkedList::detach_helper2(QLinkedList::iterator)
 - QLinkedList::iterator QLinkedList::end()
 - QLinkedList::iterator QLinkedList::erase(QLinkedList::iterator)
 - QLinkedList::iterator QLinkedList::erase(QLinkedList::iterator,QLinkedList::iterator)
 - QLinkedList::iterator QLinkedList::insert(QLinkedList::iterator,const T&)
 - QLinkedList::reverse_iterator QLinkedList::rbegin()
 - QLinkedList::reverse_iterator QLinkedList::rend()
 - QList::Node* QList::detach_helper_grow(int,int)
 - QList::const_iterator QList::begin()
 - QList::const_iterator QList::cbegin()
 - QList::const_iterator QList::cend()
 - QList::const_iterator QList::constBegin()
 - QList::const_iterator QList::constEnd()
 - QList::const_iterator QList::end()
 - QList::const_reverse_iterator QList::crbegin()
 - QList::const_reverse_iterator QList::crend()
 - QList::const_reverse_iterator QList::rbegin()
 - QList::const_reverse_iterator QList::rend()
 - QList::iterator QList::begin()
 - QList::iterator QList::end()
 - QList::iterator QList::erase(QList::iterator)
 - QList::iterator QList::erase(QList::iterator,QList::iterator)
 - QList::iterator QList::insert(QList::iterator,const T&)
 - QList::reverse_iterator QList::rbegin()
 - QList::reverse_iterator QList::rend()
 - QList<QGlyphRun> QTextFragment::glyphRuns(int,int)
 - QList<QGlyphRun> QTextLayout::glyphRuns(int,int)
 - QList<QGlyphRun> QTextLine::glyphRuns(int,int)
 - QListModel* QListWidgetItem::listModel()
 - QMap::const_iterator QMap::begin()
 - QMap::const_iterator QMap::cbegin()
 - QMap::const_iterator QMap::cend()
 - QMap::const_iterator QMap::constBegin()
 - QMap::const_iterator QMap::constEnd()
 - QMap::const_iterator QMap::constFind(const Key&)
 - QMap::const_iterator QMap::end()
 - QMap::const_iterator QMap::find(const Key&)
 - QMap::const_iterator QMap::lowerBound(const Key&)
 - QMap::const_iterator QMap::upperBound(const Key&)
 - QMap::const_key_value_iterator QMap::constKeyValueBegin()
 - QMap::const_key_value_iterator QMap::constKeyValueEnd()
 - QMap::const_key_value_iterator QMap::keyValueBegin()
 - QMap::const_key_value_iterator QMap::keyValueEnd()
 - QMap::iterator QMap::begin()
 - QMap::iterator QMap::end()
 - QMap::iterator QMap::erase(QMap::iterator)
 - QMap::iterator QMap::find(const Key&)
 - QMap::iterator QMap::insert(QMap::const_iterator,const Key&,const T&)
 - QMap::iterator QMap::insert(const Key&,const T&)
 - QMap::iterator QMap::insertMulti(QMap::const_iterator,const Key&,const T&)
 - QMap::iterator QMap::insertMulti(const Key&,const T&)
 - QMap::iterator QMap::lowerBound(const Key&)
 - QMap::iterator QMap::upperBound(const Key&)
 - QMap::key_iterator QMap::keyBegin()
 - QMap::key_iterator QMap::keyEnd()
 - QMap::key_value_iterator QMap::keyValueBegin()
 - QMap::key_value_iterator QMap::keyValueEnd()
 - QMessageLogContext& QMessageLogContext::copyContextFrom(const QMessageLogContext&)
 - QMetaObject::Connection::RestrictedBool QMetaObject::Connection::operator void *QMetaObject::Connection::*()
 - QMultiMap<K, V> QMultiMap::operator+(const QMultiMap<K, V>&)
 - QMultiMap<K, V>& QMultiMap::operator+=(const QMultiMap<K, V>&)
 - QMultiMap<K, V>& QMultiMap::unite(const QMultiMap<K, V>&)
 - QMutexData* QBasicMutex::dummyLocked()
 - QObjectUserData* QObject::userData(uint)
 - QOpenGLTextureHelper* QOpenGLContext::textureFunctions()
 - QOpenGLVersionFunctionsStorage* QOpenGLContext::functionsBackendStorage()
 - QPagedPaintDevicePrivate* QPagedPaintDevice::dd()
 - QPair<QHash::const_iterator, QHash::const_iterator> QHash::equal_range(const Key&)
 - QPair<QHash::iterator, QHash::iterator> QHash::equal_range(const Key&)
 - QPair<QMap::const_iterator, QMap::const_iterator> QMap::equal_range(const Key&)
 - QPair<QMap::iterator, QMap::iterator> QMap::equal_range(const Key&)
 - QPlainTextDocumentLayoutPrivate* QPlainTextDocumentLayout::priv()
 - QPlatformBackingStore* QBackingStore::handle()
 - QPlatformMenu* QMenu::platformMenu()
 - QPlatformMenuBar* QMenuBar::platformMenuBar()
 - QPlatformNativeInterface* QGuiApplication::platformNativeInterface()
 - QPlatformOffscreenSurface* QOffscreenSurface::handle()
 - QPlatformOpenGLContext* QOpenGLContext::handle()
 - QPlatformOpenGLContext* QOpenGLContext::shareHandle()
 - QPlatformPixmap* QPixmap::handle()
 - QPlatformScreen* QScreen::handle()
 - QPlatformWindow* QWindow::handle()
 - QRegion::const_reverse_iterator QRegion::crbegin()
 - QRegion::const_reverse_iterator QRegion::crend()
 - QRegion::const_reverse_iterator QRegion::rbegin()
 - QRegion::const_reverse_iterator QRegion::rend()
 - QRgba64 QColor::rgba64()
 - QSet::const_iterator QSet::begin()
 - QSet::const_iterator QSet::cbegin()
 - QSet::const_iterator QSet::cend()
 - QSet::const_iterator QSet::constBegin()
 - QSet::const_iterator QSet::constEnd()
 - QSet::const_iterator QSet::constFind(const T&)
 - QSet::const_iterator QSet::end()
 - QSet::const_iterator QSet::find(const T&)
 - QSet::const_iterator QSet::m2c(QSet::iterator)
 - QSet::const_reverse_iterator QSet::crbegin()
 - QSet::const_reverse_iterator QSet::crend()
 - QSet::const_reverse_iterator QSet::rbegin()
 - QSet::const_reverse_iterator QSet::rend()
 - QSet::iterator QSet::begin()
 - QSet::iterator QSet::end()
 - QSet::iterator QSet::erase(QSet::const_iterator)
 - QSet::iterator QSet::erase(QSet::iterator)
 - QSet::iterator QSet::find(const T&)
 - QSet::iterator QSet::insert(const T&)
 - QSet::reverse_iterator QSet::rbegin()
 - QSet::reverse_iterator QSet::rend()
 - QStringView QRegularExpressionMatch::capturedView(QStringView)
 - QStringView QRegularExpressionMatch::capturedView(int)
 - QSysInfo::MacVersion QSysInfo::macVersion()
 - QSysInfo::WinVersion QSysInfo::windowsVersion()
 - QTableModel* QTableWidgetItem::tableModel()
 - QTextDocumentPrivate* QTextBlock::docHandle()
 - QTextDocumentPrivate* QTextDocument::docHandle()
 - QTextDocumentPrivate* QTextObject::docHandle()
 - QTextEngine* QTextLayout::engine()
 - QTextFrameLayoutData* QTextFrame::layoutData()
 - QTreeModel* QTreeWidgetItem::treeModel(QTreeWidget*)
 - QVector::const_iterator QVector::begin()
 - QVector::const_iterator QVector::cbegin()
 - QVector::const_iterator QVector::cend()
 - QVector::const_iterator QVector::constBegin()
 - QVector::const_iterator QVector::constEnd()
 - QVector::const_iterator QVector::end()
 - QVector::const_reverse_iterator QVector::crbegin()
 - QVector::const_reverse_iterator QVector::crend()
 - QVector::const_reverse_iterator QVector::rbegin()
 - QVector::const_reverse_iterator QVector::rend()
 - QVector::iterator QVector::begin()
 - QVector::iterator QVector::end()
 - QVector::iterator QVector::erase(QVector::iterator)
 - QVector::iterator QVector::erase(QVector::iterator,QVector::iterator)
 - QVector::iterator QVector::insert(QVector::iterator,T&&)
 - QVector::iterator QVector::insert(QVector::iterator,const T&)
 - QVector::iterator QVector::insert(QVector::iterator,int,const T&)
 - QVector::reverse_iterator QVector::rbegin()
 - QVector::reverse_iterator QVector::rend()
 - QVector<GLuint64> QOpenGLTimeMonitor::waitForIntervals()
 - QVector<GLuint64> QOpenGLTimeMonitor::waitForSamples()
 - QVector<QStaticPlugin> QPluginLoader::staticPlugins()
 - QVulkanInstance* QWindow::vulkanInstance()
 - Qt::QFlags<Alignment::enum_type> Qt::operator|(Alignment::enum_type,Alignment::enum_type)
 - Qt::QFlags<Alignment::enum_type> Qt::operator|(Alignment::enum_type,Qt::QFlags<Alignment::enum_type>)
 - Qt::QFlags<DockWidgetAreas::enum_type> Qt::operator|(DockWidgetAreas::enum_type,DockWidgetAreas::enum_type)
 - Qt::QFlags<DockWidgetAreas::enum_type> Qt::operator|(DockWidgetAreas::enum_type,Qt::QFlags<DockWidgetAreas::enum_type>)
 - Qt::QFlags<DropActions::enum_type> Qt::operator|(DropActions::enum_type,DropActions::enum_type)
 - Qt::QFlags<DropActions::enum_type> Qt::operator|(DropActions::enum_type,Qt::QFlags<DropActions::enum_type>)
 - Qt::QFlags<Edges::enum_type> Qt::operator|(Edges::enum_type,Edges::enum_type)
 - Qt::QFlags<Edges::enum_type> Qt::operator|(Edges::enum_type,Qt::QFlags<Edges::enum_type>)
 - Qt::QFlags<GestureFlags::enum_type> Qt::operator|(GestureFlags::enum_type,GestureFlags::enum_type)
 - Qt::QFlags<GestureFlags::enum_type> Qt::operator|(GestureFlags::enum_type,Qt::QFlags<GestureFlags::enum_type>)
 - Qt::QFlags<ImageConversionFlags::enum_type> Qt::operator|(ImageConversionFlags::enum_type,ImageConversionFlags::enum_type)
 - Qt::QFlags<ImageConversionFlags::enum_type> Qt::operator|(ImageConversionFlags::enum_type,Qt::QFlags<ImageConversionFlags::enum_type>)
 - Qt::QFlags<InputMethodHints::enum_type> Qt::operator|(InputMethodHints::enum_type,InputMethodHints::enum_type)
 - Qt::QFlags<InputMethodHints::enum_type> Qt::operator|(InputMethodHints::enum_type,Qt::QFlags<InputMethodHints::enum_type>)
 - Qt::QFlags<InputMethodQueries::enum_type> Qt::operator|(InputMethodQueries::enum_type,InputMethodQueries::enum_type)
 - Qt::QFlags<InputMethodQueries::enum_type> Qt::operator|(InputMethodQueries::enum_type,Qt::QFlags<InputMethodQueries::enum_type>)
 - Qt::QFlags<ItemFlags::enum_type> Qt::operator|(ItemFlags::enum_type,ItemFlags::enum_type)
 - Qt::QFlags<ItemFlags::enum_type> Qt::operator|(ItemFlags::enum_type,Qt::QFlags<ItemFlags::enum_type>)
 - Qt::QFlags<KeyboardModifiers::enum_type> Qt::operator|(KeyboardModifiers::enum_type,KeyboardModifiers::enum_type)
 - Qt::QFlags<KeyboardModifiers::enum_type> Qt::operator|(KeyboardModifiers::enum_type,Qt::QFlags<KeyboardModifiers::enum_type>)
 - Qt::QFlags<MatchFlags::enum_type> Qt::operator|(MatchFlags::enum_type,MatchFlags::enum_type)
 - Qt::QFlags<MatchFlags::enum_type> Qt::operator|(MatchFlags::enum_type,Qt::QFlags<MatchFlags::enum_type>)
 - Qt::QFlags<MouseButtons::enum_type> Qt::operator|(MouseButtons::enum_type,MouseButtons::enum_type)
 - Qt::QFlags<MouseButtons::enum_type> Qt::operator|(MouseButtons::enum_type,Qt::QFlags<MouseButtons::enum_type>)
 - Qt::QFlags<MouseEventFlags::enum_type> Qt::operator|(MouseEventFlags::enum_type,MouseEventFlags::enum_type)
 - Qt::QFlags<MouseEventFlags::enum_type> Qt::operator|(MouseEventFlags::enum_type,Qt::QFlags<MouseEventFlags::enum_type>)
 - Qt::QFlags<Orientations::enum_type> Qt::operator|(Orientations::enum_type,Orientations::enum_type)
 - Qt::QFlags<Orientations::enum_type> Qt::operator|(Orientations::enum_type,Qt::QFlags<Orientations::enum_type>)
 - Qt::QFlags<ScreenOrientations::enum_type> Qt::operator|(ScreenOrientations::enum_type,Qt::QFlags<ScreenOrientations::enum_type>)
 - Qt::QFlags<ScreenOrientations::enum_type> Qt::operator|(ScreenOrientations::enum_type,ScreenOrientations::enum_type)
 - Qt::QFlags<SplitBehavior::enum_type> Qt::operator|(SplitBehavior::enum_type,Qt::QFlags<SplitBehavior::enum_type>)
 - Qt::QFlags<SplitBehavior::enum_type> Qt::operator|(SplitBehavior::enum_type,SplitBehavior::enum_type)
 - Qt::QFlags<TextInteractionFlags::enum_type> Qt::operator|(TextInteractionFlags::enum_type,Qt::QFlags<TextInteractionFlags::enum_type>)
 - Qt::QFlags<TextInteractionFlags::enum_type> Qt::operator|(TextInteractionFlags::enum_type,TextInteractionFlags::enum_type)
 - Qt::QFlags<ToolBarAreas::enum_type> Qt::operator|(ToolBarAreas::enum_type,Qt::QFlags<ToolBarAreas::enum_type>)
 - Qt::QFlags<ToolBarAreas::enum_type> Qt::operator|(ToolBarAreas::enum_type,ToolBarAreas::enum_type)
 - Qt::QFlags<TouchPointStates::enum_type> Qt::operator|(TouchPointStates::enum_type,Qt::QFlags<TouchPointStates::enum_type>)
 - Qt::QFlags<TouchPointStates::enum_type> Qt::operator|(TouchPointStates::enum_type,TouchPointStates::enum_type)
 - Qt::QFlags<WindowFlags::enum_type> Qt::operator|(WindowFlags::enum_type,Qt::QFlags<WindowFlags::enum_type>)
 - Qt::QFlags<WindowFlags::enum_type> Qt::operator|(WindowFlags::enum_type,WindowFlags::enum_type)
 - Qt::QFlags<WindowStates::enum_type> Qt::operator|(WindowStates::enum_type,Qt::QFlags<WindowStates::enum_type>)
 - Qt::QFlags<WindowStates::enum_type> Qt::operator|(WindowStates::enum_type,WindowStates::enum_type)
 - QtPrivate::ExceptionStore& QFutureInterfaceBase::exceptionStore()
 - QtPrivate::ResultStoreBase& QFutureInterfaceBase::resultStoreBase()
 - boost::shared_ptr<T> qt_gui_cpp::RosPluginlibPluginProvider::create_plugin(const std::string&,qt_gui_cpp::PluginContext*)
 - const QtPrivate::ResultStoreBase& QFutureInterfaceBase::resultStoreBase()
 - qfloat16 QCborStreamReader::toFloat16()
 - std::chrono::milliseconds QTimer::intervalAsDuration()
 - std::chrono::milliseconds QTimer::remainingTimeAsDuration()
 - std::chrono::nanoseconds QDeadlineTimer::remainingTimeAsDuration()
 - std::list<T> QLinkedList::toStdList()
 - std::list<T> QList::toStdList()
 - std::map<Key, T> QMap::toStdMap()
 - std::string QByteArray::toStdString()
 - std::vector<T> QVector::toStdVector()
 - typename QMap::const_iterator<Key, T> QMultiMap::constFind(const Key&,const T&)
 - typename QMap::const_iterator<Key, T> QMultiMap::find(const Key&,const T&)
 - typename QMap::iterator<Key, T> QMultiMap::find(const Key&,const T&)
 - typename QMap::iterator<Key, T> QMultiMap::insert(const Key&,const T&)
 - typename QMap::iterator<Key, T> QMultiMap::insert(typename QMap::const_iterator<Key, T>,const Key&,const T&)
 - typename QMap::iterator<Key, T> QMultiMap::replace(const Key&,const T&)
************************************************************************

************************************************************************
Incompatible API
************************************************************************

************************************************************************
Deprecated
************************************************************************

